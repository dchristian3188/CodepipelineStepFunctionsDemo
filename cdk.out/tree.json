{
  "version": "tree-0.1",
  "tree": {
    "id": "App",
    "path": "",
    "children": {
      "Tree": {
        "id": "Tree",
        "path": "Tree"
      },
      "Pattern3TestEnvStack": {
        "id": "Pattern3TestEnvStack",
        "path": "Pattern3TestEnvStack",
        "children": {
          "MyPattern3TestBucket": {
            "id": "MyPattern3TestBucket",
            "path": "Pattern3TestEnvStack/MyPattern3TestBucket",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "Pattern3TestEnvStack/MyPattern3TestBucket/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::S3::Bucket",
                  "aws:cdk:cloudformation:props": {
                    "bucketEncryption": {
                      "serverSideEncryptionConfiguration": [
                        {
                          "serverSideEncryptionByDefault": {
                            "sseAlgorithm": "aws:kms"
                          }
                        }
                      ]
                    },
                    "publicAccessBlockConfiguration": {
                      "blockPublicAcls": true,
                      "blockPublicPolicy": true,
                      "ignorePublicAcls": true,
                      "restrictPublicBuckets": true
                    },
                    "tags": [
                      {
                        "key": "myDefaultTag",
                        "value": "hooray-for-tagging"
                      }
                    ],
                    "versioningConfiguration": {
                      "status": "Enabled"
                    }
                  }
                }
              },
              "Notifications": {
                "id": "Notifications",
                "path": "Pattern3TestEnvStack/MyPattern3TestBucket/Notifications"
              }
            }
          },
          "MyPattern3TestVpc": {
            "id": "MyPattern3TestVpc",
            "path": "Pattern3TestEnvStack/MyPattern3TestVpc",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "Pattern3TestEnvStack/MyPattern3TestVpc/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::VPC",
                  "aws:cdk:cloudformation:props": {
                    "cidrBlock": "10.0.0.0/16",
                    "enableDnsHostnames": true,
                    "enableDnsSupport": true,
                    "instanceTenancy": "default",
                    "tags": [
                      {
                        "key": "Name",
                        "value": "Pattern3TestEnvStack/MyPattern3TestVpc"
                      }
                    ]
                  }
                }
              },
              "PublicSubnet1": {
                "id": "PublicSubnet1",
                "path": "Pattern3TestEnvStack/MyPattern3TestVpc/PublicSubnet1",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "Pattern3TestEnvStack/MyPattern3TestVpc/PublicSubnet1/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.0.0/18",
                        "vpcId": {
                          "Ref": "MyPattern3TestVpc53A79AB6"
                        },
                        "availabilityZone": {
                          "Fn::Select": [
                            0,
                            {
                              "Fn::GetAZs": ""
                            }
                          ]
                        },
                        "mapPublicIpOnLaunch": true,
                        "tags": [
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Public"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Public"
                          },
                          {
                            "key": "Name",
                            "value": "Pattern3TestEnvStack/MyPattern3TestVpc/PublicSubnet1"
                          }
                        ]
                      }
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "Pattern3TestEnvStack/MyPattern3TestVpc/PublicSubnet1/Acl"
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "Pattern3TestEnvStack/MyPattern3TestVpc/PublicSubnet1/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "MyPattern3TestVpc53A79AB6"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "Pattern3TestEnvStack/MyPattern3TestVpc/PublicSubnet1"
                          }
                        ]
                      }
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "Pattern3TestEnvStack/MyPattern3TestVpc/PublicSubnet1/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "MyPattern3TestVpcPublicSubnet1RouteTableCD5DE7C6"
                        },
                        "subnetId": {
                          "Ref": "MyPattern3TestVpcPublicSubnet1Subnet8AE22394"
                        }
                      }
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "Pattern3TestEnvStack/MyPattern3TestVpc/PublicSubnet1/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "MyPattern3TestVpcPublicSubnet1RouteTableCD5DE7C6"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "gatewayId": {
                          "Ref": "MyPattern3TestVpcIGW684294EF"
                        }
                      }
                    }
                  },
                  "EIP": {
                    "id": "EIP",
                    "path": "Pattern3TestEnvStack/MyPattern3TestVpc/PublicSubnet1/EIP",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::EIP",
                      "aws:cdk:cloudformation:props": {
                        "domain": "vpc",
                        "tags": [
                          {
                            "key": "Name",
                            "value": "Pattern3TestEnvStack/MyPattern3TestVpc/PublicSubnet1"
                          }
                        ]
                      }
                    }
                  },
                  "NATGateway": {
                    "id": "NATGateway",
                    "path": "Pattern3TestEnvStack/MyPattern3TestVpc/PublicSubnet1/NATGateway",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::NatGateway",
                      "aws:cdk:cloudformation:props": {
                        "allocationId": {
                          "Fn::GetAtt": [
                            "MyPattern3TestVpcPublicSubnet1EIPFFA51000",
                            "AllocationId"
                          ]
                        },
                        "subnetId": {
                          "Ref": "MyPattern3TestVpcPublicSubnet1Subnet8AE22394"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "Pattern3TestEnvStack/MyPattern3TestVpc/PublicSubnet1"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "PublicSubnet2": {
                "id": "PublicSubnet2",
                "path": "Pattern3TestEnvStack/MyPattern3TestVpc/PublicSubnet2",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "Pattern3TestEnvStack/MyPattern3TestVpc/PublicSubnet2/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.64.0/18",
                        "vpcId": {
                          "Ref": "MyPattern3TestVpc53A79AB6"
                        },
                        "availabilityZone": {
                          "Fn::Select": [
                            1,
                            {
                              "Fn::GetAZs": ""
                            }
                          ]
                        },
                        "mapPublicIpOnLaunch": true,
                        "tags": [
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Public"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Public"
                          },
                          {
                            "key": "Name",
                            "value": "Pattern3TestEnvStack/MyPattern3TestVpc/PublicSubnet2"
                          }
                        ]
                      }
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "Pattern3TestEnvStack/MyPattern3TestVpc/PublicSubnet2/Acl"
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "Pattern3TestEnvStack/MyPattern3TestVpc/PublicSubnet2/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "MyPattern3TestVpc53A79AB6"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "Pattern3TestEnvStack/MyPattern3TestVpc/PublicSubnet2"
                          }
                        ]
                      }
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "Pattern3TestEnvStack/MyPattern3TestVpc/PublicSubnet2/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "MyPattern3TestVpcPublicSubnet2RouteTable9E227A29"
                        },
                        "subnetId": {
                          "Ref": "MyPattern3TestVpcPublicSubnet2Subnet2D8F22B8"
                        }
                      }
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "Pattern3TestEnvStack/MyPattern3TestVpc/PublicSubnet2/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "MyPattern3TestVpcPublicSubnet2RouteTable9E227A29"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "gatewayId": {
                          "Ref": "MyPattern3TestVpcIGW684294EF"
                        }
                      }
                    }
                  },
                  "EIP": {
                    "id": "EIP",
                    "path": "Pattern3TestEnvStack/MyPattern3TestVpc/PublicSubnet2/EIP",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::EIP",
                      "aws:cdk:cloudformation:props": {
                        "domain": "vpc",
                        "tags": [
                          {
                            "key": "Name",
                            "value": "Pattern3TestEnvStack/MyPattern3TestVpc/PublicSubnet2"
                          }
                        ]
                      }
                    }
                  },
                  "NATGateway": {
                    "id": "NATGateway",
                    "path": "Pattern3TestEnvStack/MyPattern3TestVpc/PublicSubnet2/NATGateway",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::NatGateway",
                      "aws:cdk:cloudformation:props": {
                        "allocationId": {
                          "Fn::GetAtt": [
                            "MyPattern3TestVpcPublicSubnet2EIPF0B81A2D",
                            "AllocationId"
                          ]
                        },
                        "subnetId": {
                          "Ref": "MyPattern3TestVpcPublicSubnet2Subnet2D8F22B8"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "Pattern3TestEnvStack/MyPattern3TestVpc/PublicSubnet2"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "PrivateSubnet1": {
                "id": "PrivateSubnet1",
                "path": "Pattern3TestEnvStack/MyPattern3TestVpc/PrivateSubnet1",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "Pattern3TestEnvStack/MyPattern3TestVpc/PrivateSubnet1/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.128.0/18",
                        "vpcId": {
                          "Ref": "MyPattern3TestVpc53A79AB6"
                        },
                        "availabilityZone": {
                          "Fn::Select": [
                            0,
                            {
                              "Fn::GetAZs": ""
                            }
                          ]
                        },
                        "mapPublicIpOnLaunch": false,
                        "tags": [
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Private"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Private"
                          },
                          {
                            "key": "Name",
                            "value": "Pattern3TestEnvStack/MyPattern3TestVpc/PrivateSubnet1"
                          }
                        ]
                      }
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "Pattern3TestEnvStack/MyPattern3TestVpc/PrivateSubnet1/Acl"
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "Pattern3TestEnvStack/MyPattern3TestVpc/PrivateSubnet1/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "MyPattern3TestVpc53A79AB6"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "Pattern3TestEnvStack/MyPattern3TestVpc/PrivateSubnet1"
                          }
                        ]
                      }
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "Pattern3TestEnvStack/MyPattern3TestVpc/PrivateSubnet1/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "MyPattern3TestVpcPrivateSubnet1RouteTable677F325A"
                        },
                        "subnetId": {
                          "Ref": "MyPattern3TestVpcPrivateSubnet1Subnet4897946C"
                        }
                      }
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "Pattern3TestEnvStack/MyPattern3TestVpc/PrivateSubnet1/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "MyPattern3TestVpcPrivateSubnet1RouteTable677F325A"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "natGatewayId": {
                          "Ref": "MyPattern3TestVpcPublicSubnet1NATGateway3DFA6A68"
                        }
                      }
                    }
                  }
                }
              },
              "PrivateSubnet2": {
                "id": "PrivateSubnet2",
                "path": "Pattern3TestEnvStack/MyPattern3TestVpc/PrivateSubnet2",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "Pattern3TestEnvStack/MyPattern3TestVpc/PrivateSubnet2/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.192.0/18",
                        "vpcId": {
                          "Ref": "MyPattern3TestVpc53A79AB6"
                        },
                        "availabilityZone": {
                          "Fn::Select": [
                            1,
                            {
                              "Fn::GetAZs": ""
                            }
                          ]
                        },
                        "mapPublicIpOnLaunch": false,
                        "tags": [
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Private"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Private"
                          },
                          {
                            "key": "Name",
                            "value": "Pattern3TestEnvStack/MyPattern3TestVpc/PrivateSubnet2"
                          }
                        ]
                      }
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "Pattern3TestEnvStack/MyPattern3TestVpc/PrivateSubnet2/Acl"
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "Pattern3TestEnvStack/MyPattern3TestVpc/PrivateSubnet2/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "MyPattern3TestVpc53A79AB6"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "Pattern3TestEnvStack/MyPattern3TestVpc/PrivateSubnet2"
                          }
                        ]
                      }
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "Pattern3TestEnvStack/MyPattern3TestVpc/PrivateSubnet2/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "MyPattern3TestVpcPrivateSubnet2RouteTable3ADD50A8"
                        },
                        "subnetId": {
                          "Ref": "MyPattern3TestVpcPrivateSubnet2Subnet04DE2344"
                        }
                      }
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "Pattern3TestEnvStack/MyPattern3TestVpc/PrivateSubnet2/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "MyPattern3TestVpcPrivateSubnet2RouteTable3ADD50A8"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "natGatewayId": {
                          "Ref": "MyPattern3TestVpcPublicSubnet2NATGateway7E31EB12"
                        }
                      }
                    }
                  }
                }
              },
              "IGW": {
                "id": "IGW",
                "path": "Pattern3TestEnvStack/MyPattern3TestVpc/IGW",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::InternetGateway",
                  "aws:cdk:cloudformation:props": {
                    "tags": [
                      {
                        "key": "Name",
                        "value": "Pattern3TestEnvStack/MyPattern3TestVpc"
                      }
                    ]
                  }
                }
              },
              "VPCGW": {
                "id": "VPCGW",
                "path": "Pattern3TestEnvStack/MyPattern3TestVpc/VPCGW",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::VPCGatewayAttachment",
                  "aws:cdk:cloudformation:props": {
                    "vpcId": {
                      "Ref": "MyPattern3TestVpc53A79AB6"
                    },
                    "internetGatewayId": {
                      "Ref": "MyPattern3TestVpcIGW684294EF"
                    }
                  }
                }
              }
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "Pattern3TestEnvStack/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "Pattern3TestEnvStack/CDKMetadata/Default"
              },
              "Condition": {
                "id": "Condition",
                "path": "Pattern3TestEnvStack/CDKMetadata/Condition"
              }
            }
          }
        }
      },
      "Pattern3ProdEnvStack": {
        "id": "Pattern3ProdEnvStack",
        "path": "Pattern3ProdEnvStack",
        "children": {
          "MyPattern3ProductionBucket": {
            "id": "MyPattern3ProductionBucket",
            "path": "Pattern3ProdEnvStack/MyPattern3ProductionBucket",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "Pattern3ProdEnvStack/MyPattern3ProductionBucket/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::S3::Bucket",
                  "aws:cdk:cloudformation:props": {
                    "bucketEncryption": {
                      "serverSideEncryptionConfiguration": [
                        {
                          "serverSideEncryptionByDefault": {
                            "sseAlgorithm": "aws:kms"
                          }
                        }
                      ]
                    },
                    "publicAccessBlockConfiguration": {
                      "blockPublicAcls": true,
                      "blockPublicPolicy": true,
                      "ignorePublicAcls": true,
                      "restrictPublicBuckets": true
                    },
                    "tags": [
                      {
                        "key": "myDefaultTag",
                        "value": "hooray-for-tagging"
                      }
                    ],
                    "versioningConfiguration": {
                      "status": "Enabled"
                    }
                  }
                }
              },
              "Notifications": {
                "id": "Notifications",
                "path": "Pattern3ProdEnvStack/MyPattern3ProductionBucket/Notifications"
              }
            }
          },
          "MyPattern3ProductionVpc": {
            "id": "MyPattern3ProductionVpc",
            "path": "Pattern3ProdEnvStack/MyPattern3ProductionVpc",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "Pattern3ProdEnvStack/MyPattern3ProductionVpc/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::VPC",
                  "aws:cdk:cloudformation:props": {
                    "cidrBlock": "10.0.0.0/16",
                    "enableDnsHostnames": true,
                    "enableDnsSupport": true,
                    "instanceTenancy": "default",
                    "tags": [
                      {
                        "key": "Name",
                        "value": "Pattern3ProdEnvStack/MyPattern3ProductionVpc"
                      }
                    ]
                  }
                }
              },
              "PublicSubnet1": {
                "id": "PublicSubnet1",
                "path": "Pattern3ProdEnvStack/MyPattern3ProductionVpc/PublicSubnet1",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "Pattern3ProdEnvStack/MyPattern3ProductionVpc/PublicSubnet1/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.0.0/18",
                        "vpcId": {
                          "Ref": "MyPattern3ProductionVpc4A304BCE"
                        },
                        "availabilityZone": {
                          "Fn::Select": [
                            0,
                            {
                              "Fn::GetAZs": ""
                            }
                          ]
                        },
                        "mapPublicIpOnLaunch": true,
                        "tags": [
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Public"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Public"
                          },
                          {
                            "key": "Name",
                            "value": "Pattern3ProdEnvStack/MyPattern3ProductionVpc/PublicSubnet1"
                          }
                        ]
                      }
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "Pattern3ProdEnvStack/MyPattern3ProductionVpc/PublicSubnet1/Acl"
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "Pattern3ProdEnvStack/MyPattern3ProductionVpc/PublicSubnet1/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "MyPattern3ProductionVpc4A304BCE"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "Pattern3ProdEnvStack/MyPattern3ProductionVpc/PublicSubnet1"
                          }
                        ]
                      }
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "Pattern3ProdEnvStack/MyPattern3ProductionVpc/PublicSubnet1/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "MyPattern3ProductionVpcPublicSubnet1RouteTableA288DD34"
                        },
                        "subnetId": {
                          "Ref": "MyPattern3ProductionVpcPublicSubnet1SubnetE81A71B4"
                        }
                      }
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "Pattern3ProdEnvStack/MyPattern3ProductionVpc/PublicSubnet1/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "MyPattern3ProductionVpcPublicSubnet1RouteTableA288DD34"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "gatewayId": {
                          "Ref": "MyPattern3ProductionVpcIGW5C86E601"
                        }
                      }
                    }
                  },
                  "EIP": {
                    "id": "EIP",
                    "path": "Pattern3ProdEnvStack/MyPattern3ProductionVpc/PublicSubnet1/EIP",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::EIP",
                      "aws:cdk:cloudformation:props": {
                        "domain": "vpc",
                        "tags": [
                          {
                            "key": "Name",
                            "value": "Pattern3ProdEnvStack/MyPattern3ProductionVpc/PublicSubnet1"
                          }
                        ]
                      }
                    }
                  },
                  "NATGateway": {
                    "id": "NATGateway",
                    "path": "Pattern3ProdEnvStack/MyPattern3ProductionVpc/PublicSubnet1/NATGateway",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::NatGateway",
                      "aws:cdk:cloudformation:props": {
                        "allocationId": {
                          "Fn::GetAtt": [
                            "MyPattern3ProductionVpcPublicSubnet1EIP820D5AD6",
                            "AllocationId"
                          ]
                        },
                        "subnetId": {
                          "Ref": "MyPattern3ProductionVpcPublicSubnet1SubnetE81A71B4"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "Pattern3ProdEnvStack/MyPattern3ProductionVpc/PublicSubnet1"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "PublicSubnet2": {
                "id": "PublicSubnet2",
                "path": "Pattern3ProdEnvStack/MyPattern3ProductionVpc/PublicSubnet2",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "Pattern3ProdEnvStack/MyPattern3ProductionVpc/PublicSubnet2/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.64.0/18",
                        "vpcId": {
                          "Ref": "MyPattern3ProductionVpc4A304BCE"
                        },
                        "availabilityZone": {
                          "Fn::Select": [
                            1,
                            {
                              "Fn::GetAZs": ""
                            }
                          ]
                        },
                        "mapPublicIpOnLaunch": true,
                        "tags": [
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Public"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Public"
                          },
                          {
                            "key": "Name",
                            "value": "Pattern3ProdEnvStack/MyPattern3ProductionVpc/PublicSubnet2"
                          }
                        ]
                      }
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "Pattern3ProdEnvStack/MyPattern3ProductionVpc/PublicSubnet2/Acl"
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "Pattern3ProdEnvStack/MyPattern3ProductionVpc/PublicSubnet2/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "MyPattern3ProductionVpc4A304BCE"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "Pattern3ProdEnvStack/MyPattern3ProductionVpc/PublicSubnet2"
                          }
                        ]
                      }
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "Pattern3ProdEnvStack/MyPattern3ProductionVpc/PublicSubnet2/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "MyPattern3ProductionVpcPublicSubnet2RouteTableB0E3D176"
                        },
                        "subnetId": {
                          "Ref": "MyPattern3ProductionVpcPublicSubnet2Subnet760B74BF"
                        }
                      }
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "Pattern3ProdEnvStack/MyPattern3ProductionVpc/PublicSubnet2/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "MyPattern3ProductionVpcPublicSubnet2RouteTableB0E3D176"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "gatewayId": {
                          "Ref": "MyPattern3ProductionVpcIGW5C86E601"
                        }
                      }
                    }
                  },
                  "EIP": {
                    "id": "EIP",
                    "path": "Pattern3ProdEnvStack/MyPattern3ProductionVpc/PublicSubnet2/EIP",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::EIP",
                      "aws:cdk:cloudformation:props": {
                        "domain": "vpc",
                        "tags": [
                          {
                            "key": "Name",
                            "value": "Pattern3ProdEnvStack/MyPattern3ProductionVpc/PublicSubnet2"
                          }
                        ]
                      }
                    }
                  },
                  "NATGateway": {
                    "id": "NATGateway",
                    "path": "Pattern3ProdEnvStack/MyPattern3ProductionVpc/PublicSubnet2/NATGateway",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::NatGateway",
                      "aws:cdk:cloudformation:props": {
                        "allocationId": {
                          "Fn::GetAtt": [
                            "MyPattern3ProductionVpcPublicSubnet2EIP0F36D2D6",
                            "AllocationId"
                          ]
                        },
                        "subnetId": {
                          "Ref": "MyPattern3ProductionVpcPublicSubnet2Subnet760B74BF"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "Pattern3ProdEnvStack/MyPattern3ProductionVpc/PublicSubnet2"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "PrivateSubnet1": {
                "id": "PrivateSubnet1",
                "path": "Pattern3ProdEnvStack/MyPattern3ProductionVpc/PrivateSubnet1",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "Pattern3ProdEnvStack/MyPattern3ProductionVpc/PrivateSubnet1/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.128.0/18",
                        "vpcId": {
                          "Ref": "MyPattern3ProductionVpc4A304BCE"
                        },
                        "availabilityZone": {
                          "Fn::Select": [
                            0,
                            {
                              "Fn::GetAZs": ""
                            }
                          ]
                        },
                        "mapPublicIpOnLaunch": false,
                        "tags": [
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Private"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Private"
                          },
                          {
                            "key": "Name",
                            "value": "Pattern3ProdEnvStack/MyPattern3ProductionVpc/PrivateSubnet1"
                          }
                        ]
                      }
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "Pattern3ProdEnvStack/MyPattern3ProductionVpc/PrivateSubnet1/Acl"
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "Pattern3ProdEnvStack/MyPattern3ProductionVpc/PrivateSubnet1/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "MyPattern3ProductionVpc4A304BCE"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "Pattern3ProdEnvStack/MyPattern3ProductionVpc/PrivateSubnet1"
                          }
                        ]
                      }
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "Pattern3ProdEnvStack/MyPattern3ProductionVpc/PrivateSubnet1/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "MyPattern3ProductionVpcPrivateSubnet1RouteTable6247A918"
                        },
                        "subnetId": {
                          "Ref": "MyPattern3ProductionVpcPrivateSubnet1Subnet28045DD6"
                        }
                      }
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "Pattern3ProdEnvStack/MyPattern3ProductionVpc/PrivateSubnet1/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "MyPattern3ProductionVpcPrivateSubnet1RouteTable6247A918"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "natGatewayId": {
                          "Ref": "MyPattern3ProductionVpcPublicSubnet1NATGateway7D69FC8D"
                        }
                      }
                    }
                  }
                }
              },
              "PrivateSubnet2": {
                "id": "PrivateSubnet2",
                "path": "Pattern3ProdEnvStack/MyPattern3ProductionVpc/PrivateSubnet2",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "Pattern3ProdEnvStack/MyPattern3ProductionVpc/PrivateSubnet2/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.192.0/18",
                        "vpcId": {
                          "Ref": "MyPattern3ProductionVpc4A304BCE"
                        },
                        "availabilityZone": {
                          "Fn::Select": [
                            1,
                            {
                              "Fn::GetAZs": ""
                            }
                          ]
                        },
                        "mapPublicIpOnLaunch": false,
                        "tags": [
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Private"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Private"
                          },
                          {
                            "key": "Name",
                            "value": "Pattern3ProdEnvStack/MyPattern3ProductionVpc/PrivateSubnet2"
                          }
                        ]
                      }
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "Pattern3ProdEnvStack/MyPattern3ProductionVpc/PrivateSubnet2/Acl"
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "Pattern3ProdEnvStack/MyPattern3ProductionVpc/PrivateSubnet2/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "MyPattern3ProductionVpc4A304BCE"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "Pattern3ProdEnvStack/MyPattern3ProductionVpc/PrivateSubnet2"
                          }
                        ]
                      }
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "Pattern3ProdEnvStack/MyPattern3ProductionVpc/PrivateSubnet2/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "MyPattern3ProductionVpcPrivateSubnet2RouteTableCE9E8FDA"
                        },
                        "subnetId": {
                          "Ref": "MyPattern3ProductionVpcPrivateSubnet2SubnetFAD3F23F"
                        }
                      }
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "Pattern3ProdEnvStack/MyPattern3ProductionVpc/PrivateSubnet2/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "MyPattern3ProductionVpcPrivateSubnet2RouteTableCE9E8FDA"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "natGatewayId": {
                          "Ref": "MyPattern3ProductionVpcPublicSubnet2NATGatewayE73E3612"
                        }
                      }
                    }
                  }
                }
              },
              "IGW": {
                "id": "IGW",
                "path": "Pattern3ProdEnvStack/MyPattern3ProductionVpc/IGW",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::InternetGateway",
                  "aws:cdk:cloudformation:props": {
                    "tags": [
                      {
                        "key": "Name",
                        "value": "Pattern3ProdEnvStack/MyPattern3ProductionVpc"
                      }
                    ]
                  }
                }
              },
              "VPCGW": {
                "id": "VPCGW",
                "path": "Pattern3ProdEnvStack/MyPattern3ProductionVpc/VPCGW",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::VPCGatewayAttachment",
                  "aws:cdk:cloudformation:props": {
                    "vpcId": {
                      "Ref": "MyPattern3ProductionVpc4A304BCE"
                    },
                    "internetGatewayId": {
                      "Ref": "MyPattern3ProductionVpcIGW5C86E601"
                    }
                  }
                }
              }
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "Pattern3ProdEnvStack/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "Pattern3ProdEnvStack/CDKMetadata/Default"
              },
              "Condition": {
                "id": "Condition",
                "path": "Pattern3ProdEnvStack/CDKMetadata/Condition"
              }
            }
          }
        }
      },
      "StepFunctionsTestStack": {
        "id": "StepFunctionsTestStack",
        "path": "StepFunctionsTestStack",
        "children": {
          "LambdaTestDefaults": {
            "id": "LambdaTestDefaults",
            "path": "StepFunctionsTestStack/LambdaTestDefaults",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "StepFunctionsTestStack/LambdaTestDefaults/ServiceRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "StepFunctionsTestStack/LambdaTestDefaults/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "StepFunctionsTestStack/LambdaTestDefaults/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "StepFunctionsTestStack/LambdaTestDefaults/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "cloudformation:DescribeStackResource",
                                    "cloudformation:DescribeStackResources",
                                    "cloudformation:DescribeStacks",
                                    "cloudformation:ListStackResources",
                                    "s3:GetBucketTagging",
                                    "s3:GetBucketVersioning"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*"
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "LambdaTestDefaultsServiceRoleDefaultPolicy9A889CE4",
                            "roles": [
                              {
                                "Ref": "LambdaTestDefaultsServiceRole84E1560A"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              },
              "LambdaSourceBucketNameParameter": {
                "id": "LambdaSourceBucketNameParameter",
                "path": "StepFunctionsTestStack/LambdaTestDefaults/LambdaSourceBucketNameParameter"
              },
              "LambdaSourceObjectKeyParameter": {
                "id": "LambdaSourceObjectKeyParameter",
                "path": "StepFunctionsTestStack/LambdaTestDefaults/LambdaSourceObjectKeyParameter"
              },
              "Resource": {
                "id": "Resource",
                "path": "StepFunctionsTestStack/LambdaTestDefaults/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": {
                        "Ref": "LambdaTestDefaultsLambdaSourceBucketNameParameter537B577C"
                      },
                      "s3Key": {
                        "Ref": "LambdaTestDefaultsLambdaSourceObjectKeyParameterD3ED54FE"
                      }
                    },
                    "handler": "index.handler",
                    "role": {
                      "Fn::GetAtt": [
                        "LambdaTestDefaultsServiceRole84E1560A",
                        "Arn"
                      ]
                    },
                    "runtime": "python3.8",
                    "memorySize": 128,
                    "timeout": 180
                  }
                }
              },
              "EventInvokeConfig": {
                "id": "EventInvokeConfig",
                "path": "StepFunctionsTestStack/LambdaTestDefaults/EventInvokeConfig",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "StepFunctionsTestStack/LambdaTestDefaults/EventInvokeConfig/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::EventInvokeConfig",
                      "aws:cdk:cloudformation:props": {
                        "functionName": {
                          "Ref": "LambdaTestDefaults1FF7A65D"
                        },
                        "qualifier": "$LATEST",
                        "maximumRetryAttempts": 0
                      }
                    }
                  }
                }
              }
            }
          },
          "LambdaTestNetworking": {
            "id": "LambdaTestNetworking",
            "path": "StepFunctionsTestStack/LambdaTestNetworking",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "StepFunctionsTestStack/LambdaTestNetworking/ServiceRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "StepFunctionsTestStack/LambdaTestNetworking/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "StepFunctionsTestStack/LambdaTestNetworking/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "StepFunctionsTestStack/LambdaTestNetworking/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "cloudformation:DescribeStackResource",
                                    "cloudformation:DescribeStackResources",
                                    "cloudformation:DescribeStacks",
                                    "cloudformation:ListStackResources",
                                    "ec2:DescribeVpcs",
                                    "ec2:DescribeSubnets"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*"
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "LambdaTestNetworkingServiceRoleDefaultPolicy85383C89",
                            "roles": [
                              {
                                "Ref": "LambdaTestNetworkingServiceRoleC4CDA74B"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "StepFunctionsTestStack/LambdaTestNetworking/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": {
                        "Ref": "LambdaTestDefaultsLambdaSourceBucketNameParameter537B577C"
                      },
                      "s3Key": {
                        "Ref": "LambdaTestDefaultsLambdaSourceObjectKeyParameterD3ED54FE"
                      }
                    },
                    "handler": "index.handler",
                    "role": {
                      "Fn::GetAtt": [
                        "LambdaTestNetworkingServiceRoleC4CDA74B",
                        "Arn"
                      ]
                    },
                    "runtime": "python3.8",
                    "memorySize": 512,
                    "timeout": 180
                  }
                }
              },
              "EventInvokeConfig": {
                "id": "EventInvokeConfig",
                "path": "StepFunctionsTestStack/LambdaTestNetworking/EventInvokeConfig",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "StepFunctionsTestStack/LambdaTestNetworking/EventInvokeConfig/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::EventInvokeConfig",
                      "aws:cdk:cloudformation:props": {
                        "functionName": {
                          "Ref": "LambdaTestNetworking0B7A8E03"
                        },
                        "qualifier": "$LATEST",
                        "maximumRetryAttempts": 0
                      }
                    }
                  }
                }
              }
            }
          },
          "LambdaTestSecurity": {
            "id": "LambdaTestSecurity",
            "path": "StepFunctionsTestStack/LambdaTestSecurity",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "StepFunctionsTestStack/LambdaTestSecurity/ServiceRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "StepFunctionsTestStack/LambdaTestSecurity/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "StepFunctionsTestStack/LambdaTestSecurity/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "StepFunctionsTestStack/LambdaTestSecurity/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "cloudformation:DescribeStackResource",
                                    "cloudformation:DescribeStackResources",
                                    "cloudformation:DescribeStacks",
                                    "cloudformation:ListStackResources",
                                    "s3:GetBucketAcl",
                                    "ec2:DescribeRouteTables"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*"
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "LambdaTestSecurityServiceRoleDefaultPolicy2AD8E9B6",
                            "roles": [
                              {
                                "Ref": "LambdaTestSecurityServiceRole3EECE97D"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "StepFunctionsTestStack/LambdaTestSecurity/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": {
                        "Ref": "LambdaTestDefaultsLambdaSourceBucketNameParameter537B577C"
                      },
                      "s3Key": {
                        "Ref": "LambdaTestDefaultsLambdaSourceObjectKeyParameterD3ED54FE"
                      }
                    },
                    "handler": "index.handler",
                    "role": {
                      "Fn::GetAtt": [
                        "LambdaTestSecurityServiceRole3EECE97D",
                        "Arn"
                      ]
                    },
                    "runtime": "python3.8",
                    "memorySize": 512,
                    "timeout": 180
                  }
                }
              },
              "EventInvokeConfig": {
                "id": "EventInvokeConfig",
                "path": "StepFunctionsTestStack/LambdaTestSecurity/EventInvokeConfig",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "StepFunctionsTestStack/LambdaTestSecurity/EventInvokeConfig/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::EventInvokeConfig",
                      "aws:cdk:cloudformation:props": {
                        "functionName": {
                          "Ref": "LambdaTestSecurity4DC1F2BA"
                        },
                        "qualifier": "$LATEST",
                        "maximumRetryAttempts": 0
                      }
                    }
                  }
                }
              }
            }
          },
          "Invoke Default Tests": {
            "id": "Invoke Default Tests",
            "path": "StepFunctionsTestStack/Invoke Default Tests"
          },
          "Invoke Networking Tests": {
            "id": "Invoke Networking Tests",
            "path": "StepFunctionsTestStack/Invoke Networking Tests"
          },
          "Invoke Security Tests": {
            "id": "Invoke Security Tests",
            "path": "StepFunctionsTestStack/Invoke Security Tests"
          },
          "LambdaConsolidateResults": {
            "id": "LambdaConsolidateResults",
            "path": "StepFunctionsTestStack/LambdaConsolidateResults",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "StepFunctionsTestStack/LambdaConsolidateResults/ServiceRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "StepFunctionsTestStack/LambdaConsolidateResults/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "StepFunctionsTestStack/LambdaConsolidateResults/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": {
                        "Ref": "LambdaTestDefaultsLambdaSourceBucketNameParameter537B577C"
                      },
                      "s3Key": {
                        "Ref": "LambdaTestDefaultsLambdaSourceObjectKeyParameterD3ED54FE"
                      }
                    },
                    "handler": "consolidate.handler",
                    "role": {
                      "Fn::GetAtt": [
                        "LambdaConsolidateResultsServiceRoleD6491A67",
                        "Arn"
                      ]
                    },
                    "runtime": "python3.8",
                    "memorySize": 512,
                    "timeout": 180
                  }
                }
              },
              "EventInvokeConfig": {
                "id": "EventInvokeConfig",
                "path": "StepFunctionsTestStack/LambdaConsolidateResults/EventInvokeConfig",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "StepFunctionsTestStack/LambdaConsolidateResults/EventInvokeConfig/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::EventInvokeConfig",
                      "aws:cdk:cloudformation:props": {
                        "functionName": {
                          "Ref": "LambdaConsolidateResults43237531"
                        },
                        "qualifier": "$LATEST",
                        "maximumRetryAttempts": 0
                      }
                    }
                  }
                }
              }
            }
          },
          "Invoke Consolidate Results": {
            "id": "Invoke Consolidate Results",
            "path": "StepFunctionsTestStack/Invoke Consolidate Results"
          },
          "StartState": {
            "id": "StartState",
            "path": "StepFunctionsTestStack/StartState"
          },
          "All tests passed": {
            "id": "All tests passed",
            "path": "StepFunctionsTestStack/All tests passed"
          },
          "At least one test failed": {
            "id": "At least one test failed",
            "path": "StepFunctionsTestStack/At least one test failed"
          },
          "Run tests in parallel": {
            "id": "Run tests in parallel",
            "path": "StepFunctionsTestStack/Run tests in parallel"
          },
          "Did any tests fail": {
            "id": "Did any tests fail",
            "path": "StepFunctionsTestStack/Did any tests fail"
          },
          "TestMachine": {
            "id": "TestMachine",
            "path": "StepFunctionsTestStack/TestMachine",
            "children": {
              "Role": {
                "id": "Role",
                "path": "StepFunctionsTestStack/TestMachine/Role",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "StepFunctionsTestStack/TestMachine/Role/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "states.",
                                      {
                                        "Ref": "AWS::Region"
                                      },
                                      ".amazonaws.com"
                                    ]
                                  ]
                                }
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        }
                      }
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "StepFunctionsTestStack/TestMachine/Role/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "StepFunctionsTestStack/TestMachine/Role/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": "lambda:InvokeFunction",
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "LambdaConsolidateResults43237531",
                                      "Arn"
                                    ]
                                  }
                                },
                                {
                                  "Action": "lambda:InvokeFunction",
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "LambdaTestDefaults1FF7A65D",
                                      "Arn"
                                    ]
                                  }
                                },
                                {
                                  "Action": "lambda:InvokeFunction",
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "LambdaTestNetworking0B7A8E03",
                                      "Arn"
                                    ]
                                  }
                                },
                                {
                                  "Action": "lambda:InvokeFunction",
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "LambdaTestSecurity4DC1F2BA",
                                      "Arn"
                                    ]
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "TestMachineRoleDefaultPolicy774CA1F0",
                            "roles": [
                              {
                                "Ref": "TestMachineRole5645205C"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "StepFunctionsTestStack/TestMachine/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::StepFunctions::StateMachine",
                  "aws:cdk:cloudformation:props": {
                    "roleArn": {
                      "Fn::GetAtt": [
                        "TestMachineRole5645205C",
                        "Arn"
                      ]
                    },
                    "definitionString": {
                      "Fn::Join": [
                        "",
                        [
                          "{\"StartAt\":\"StartState\",\"States\":{\"StartState\":{\"Type\":\"Pass\",\"Next\":\"Run tests in parallel\"},\"Run tests in parallel\":{\"Type\":\"Parallel\",\"Next\":\"Invoke Consolidate Results\",\"Branches\":[{\"StartAt\":\"Invoke Default Tests\",\"States\":{\"Invoke Default Tests\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"OutputPath\":\"$.Payload\",\"Resource\":\"arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
                          {
                            "Fn::GetAtt": [
                              "LambdaTestDefaults1FF7A65D",
                              "Arn"
                            ]
                          },
                          "\",\"Payload\":{\"suite\":\"default\"},\"InvocationType\":\"RequestResponse\"}}}},{\"StartAt\":\"Invoke Networking Tests\",\"States\":{\"Invoke Networking Tests\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"OutputPath\":\"$.Payload\",\"Resource\":\"arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
                          {
                            "Fn::GetAtt": [
                              "LambdaTestNetworking0B7A8E03",
                              "Arn"
                            ]
                          },
                          "\",\"Payload\":{\"suite\":\"networking\"},\"InvocationType\":\"RequestResponse\"}}}},{\"StartAt\":\"Invoke Security Tests\",\"States\":{\"Invoke Security Tests\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"OutputPath\":\"$.Payload\",\"Resource\":\"arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
                          {
                            "Fn::GetAtt": [
                              "LambdaTestSecurity4DC1F2BA",
                              "Arn"
                            ]
                          },
                          "\",\"Payload\":{\"suite\":\"security\"},\"InvocationType\":\"RequestResponse\"}}}}]},\"Invoke Consolidate Results\":{\"Next\":\"Did any tests fail\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"OutputPath\":\"$.Payload\",\"Resource\":\"arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
                          {
                            "Fn::GetAtt": [
                              "LambdaConsolidateResults43237531",
                              "Arn"
                            ]
                          },
                          "\",\"Payload.$\":\"$\",\"InvocationType\":\"RequestResponse\"}},\"Did any tests fail\":{\"Type\":\"Choice\",\"Choices\":[{\"Variable\":\"$.testsFailed\",\"NumericGreaterThan\":0,\"Next\":\"At least one test failed\"}],\"Default\":\"All tests passed\"},\"All tests passed\":{\"Type\":\"Pass\",\"End\":true},\"At least one test failed\":{\"Type\":\"Fail\",\"Error\":\"$.failures\",\"Cause\":\"States.StringToJson($.failures)\"}}}"
                        ]
                      ]
                    }
                  }
                }
              }
            }
          },
          "StateMachineArn": {
            "id": "StateMachineArn",
            "path": "StepFunctionsTestStack/StateMachineArn"
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "StepFunctionsTestStack/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "StepFunctionsTestStack/CDKMetadata/Default"
              },
              "Condition": {
                "id": "Condition",
                "path": "StepFunctionsTestStack/CDKMetadata/Condition"
              }
            }
          }
        }
      },
      "Pattern3DemoStack": {
        "id": "Pattern3DemoStack",
        "path": "Pattern3DemoStack",
        "children": {
          "Pattern3Repo": {
            "id": "Pattern3Repo",
            "path": "Pattern3DemoStack/Pattern3Repo",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "Pattern3DemoStack/Pattern3Repo/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::CodeCommit::Repository",
                  "aws:cdk:cloudformation:props": {
                    "repositoryName": "CodePipelineStepFunctions"
                  }
                }
              },
              "Pattern3DemoStackPipeline918D2B91-baseline-EventRule": {
                "id": "Pattern3DemoStackPipeline918D2B91-baseline-EventRule",
                "path": "Pattern3DemoStack/Pattern3Repo/Pattern3DemoStackPipeline918D2B91-baseline-EventRule",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "Pattern3DemoStack/Pattern3Repo/Pattern3DemoStackPipeline918D2B91-baseline-EventRule/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Events::Rule",
                      "aws:cdk:cloudformation:props": {
                        "eventPattern": {
                          "source": [
                            "aws.codecommit"
                          ],
                          "resources": [
                            {
                              "Fn::GetAtt": [
                                "Pattern3Repo1B04F5EC",
                                "Arn"
                              ]
                            }
                          ],
                          "detail-type": [
                            "CodeCommit Repository State Change"
                          ],
                          "detail": {
                            "event": [
                              "referenceCreated",
                              "referenceUpdated"
                            ],
                            "referenceName": [
                              "baseline"
                            ]
                          }
                        },
                        "state": "ENABLED",
                        "targets": [
                          {
                            "id": "Target0",
                            "arn": {
                              "Fn::Join": [
                                "",
                                [
                                  "arn:",
                                  {
                                    "Ref": "AWS::Partition"
                                  },
                                  ":codepipeline:",
                                  {
                                    "Ref": "AWS::Region"
                                  },
                                  ":",
                                  {
                                    "Ref": "AWS::AccountId"
                                  },
                                  ":",
                                  {
                                    "Ref": "PipelineC660917D"
                                  }
                                ]
                              ]
                            },
                            "roleArn": {
                              "Fn::GetAtt": [
                                "PipelineEventsRole46BEEA7C",
                                "Arn"
                              ]
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "Pattern3Build": {
            "id": "Pattern3Build",
            "path": "Pattern3DemoStack/Pattern3Build",
            "children": {
              "Role": {
                "id": "Role",
                "path": "Pattern3DemoStack/Pattern3Build/Role",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "Pattern3DemoStack/Pattern3Build/Role/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "codebuild.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        }
                      }
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "Pattern3DemoStack/Pattern3Build/Role/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "Pattern3DemoStack/Pattern3Build/Role/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "logs:CreateLogGroup",
                                    "logs:CreateLogStream",
                                    "logs:PutLogEvents"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":logs:",
                                          {
                                            "Ref": "AWS::Region"
                                          },
                                          ":",
                                          {
                                            "Ref": "AWS::AccountId"
                                          },
                                          ":log-group:/aws/codebuild/",
                                          {
                                            "Ref": "Pattern3Build724CA04B"
                                          }
                                        ]
                                      ]
                                    },
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":logs:",
                                          {
                                            "Ref": "AWS::Region"
                                          },
                                          ":",
                                          {
                                            "Ref": "AWS::AccountId"
                                          },
                                          ":log-group:/aws/codebuild/",
                                          {
                                            "Ref": "Pattern3Build724CA04B"
                                          },
                                          ":*"
                                        ]
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Action": [
                                    "codebuild:CreateReportGroup",
                                    "codebuild:CreateReport",
                                    "codebuild:UpdateReport",
                                    "codebuild:BatchPutTestCases"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":codebuild:",
                                        {
                                          "Ref": "AWS::Region"
                                        },
                                        ":",
                                        {
                                          "Ref": "AWS::AccountId"
                                        },
                                        ":report-group/",
                                        {
                                          "Ref": "Pattern3Build724CA04B"
                                        },
                                        "-*"
                                      ]
                                    ]
                                  }
                                },
                                {
                                  "Action": [
                                    "s3:GetObject*",
                                    "s3:GetBucket*",
                                    "s3:List*",
                                    "s3:DeleteObject*",
                                    "s3:PutObject*",
                                    "s3:Abort*"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    {
                                      "Fn::GetAtt": [
                                        "PipelineArtifactsBucket22248F97",
                                        "Arn"
                                      ]
                                    },
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          {
                                            "Fn::GetAtt": [
                                              "PipelineArtifactsBucket22248F97",
                                              "Arn"
                                            ]
                                          },
                                          "/*"
                                        ]
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Action": [
                                    "kms:Decrypt",
                                    "kms:DescribeKey",
                                    "kms:Encrypt",
                                    "kms:ReEncrypt*",
                                    "kms:GenerateDataKey*"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "PipelineArtifactsBucketEncryptionKey01D58D69",
                                      "Arn"
                                    ]
                                  }
                                },
                                {
                                  "Action": [
                                    "kms:Decrypt",
                                    "kms:Encrypt",
                                    "kms:ReEncrypt*",
                                    "kms:GenerateDataKey*"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "PipelineArtifactsBucketEncryptionKey01D58D69",
                                      "Arn"
                                    ]
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "Pattern3BuildRoleDefaultPolicy2FDA156A",
                            "roles": [
                              {
                                "Ref": "Pattern3BuildRole14631E0B"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "Pattern3DemoStack/Pattern3Build/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::CodeBuild::Project",
                  "aws:cdk:cloudformation:props": {
                    "artifacts": {
                      "type": "CODEPIPELINE"
                    },
                    "environment": {
                      "type": "LINUX_CONTAINER",
                      "image": "aws/codebuild/amazonlinux2-x86_64-standard:3.0",
                      "privilegedMode": false,
                      "computeType": "BUILD_GENERAL1_SMALL"
                    },
                    "serviceRole": {
                      "Fn::GetAtt": [
                        "Pattern3BuildRole14631E0B",
                        "Arn"
                      ]
                    },
                    "source": {
                      "type": "CODEPIPELINE",
                      "buildSpec": "{\n  \"version\": \"0.2\",\n  \"phases\": {\n    \"install\": {\n      \"commands\": [\n        \"npm install\"\n      ]\n    },\n    \"build\": {\n      \"commands\": [\n        \"npm run build\",\n        \"npm run cdk synth -- -o dist\"\n      ]\n    }\n  },\n  \"artifacts\": {\n    \"secondary-artifacts\": {\n      \"BuildOutput\": {\n        \"base-directory\": \"$CODEBUILD_SRC_DIR/dist\",\n        \"files\": [\n          \" **/*\"\n        ]\n      },\n      \"LambdaBuildOutput\": {\n        \"base-directory\": \"$CODEBUILD_SRC_DIR/lambda-test\",\n        \"files\": [\n          \" **/*\"\n        ]\n      }\n    }\n  }\n}"
                    },
                    "encryptionKey": {
                      "Fn::GetAtt": [
                        "PipelineArtifactsBucketEncryptionKey01D58D69",
                        "Arn"
                      ]
                    }
                  }
                }
              }
            }
          },
          "LambdaTestProxy": {
            "id": "LambdaTestProxy",
            "path": "Pattern3DemoStack/LambdaTestProxy",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "Pattern3DemoStack/LambdaTestProxy/ServiceRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "Pattern3DemoStack/LambdaTestProxy/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "Pattern3DemoStack/LambdaTestProxy/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "Pattern3DemoStack/LambdaTestProxy/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "states:StartExecution",
                                    "states:DescribeExecution",
                                    "states:GetExecutionHistory"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*"
                                },
                                {
                                  "Action": [
                                    "codepipeline:PutJobSuccessResult",
                                    "codepipeline:PutJobFailureResult"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*"
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "LambdaTestProxyServiceRoleDefaultPolicy94D4685E",
                            "roles": [
                              {
                                "Ref": "LambdaTestProxyServiceRoleC38E1346"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              },
              "Code": {
                "id": "Code",
                "path": "Pattern3DemoStack/LambdaTestProxy/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "Pattern3DemoStack/LambdaTestProxy/Code/Stage"
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "Pattern3DemoStack/LambdaTestProxy/Code/AssetBucket"
                  }
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "Pattern3DemoStack/LambdaTestProxy/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": {
                        "Ref": "AssetParametersa8faf73dd06fdce53a8cc7dccaa7278bf903ad0747facec8ea710d6dda794b20S3Bucket613D827E"
                      },
                      "s3Key": {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::Select": [
                                0,
                                {
                                  "Fn::Split": [
                                    "||",
                                    {
                                      "Ref": "AssetParametersa8faf73dd06fdce53a8cc7dccaa7278bf903ad0747facec8ea710d6dda794b20S3VersionKey65F69325"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Fn::Select": [
                                1,
                                {
                                  "Fn::Split": [
                                    "||",
                                    {
                                      "Ref": "AssetParametersa8faf73dd06fdce53a8cc7dccaa7278bf903ad0747facec8ea710d6dda794b20S3VersionKey65F69325"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        ]
                      }
                    },
                    "handler": "index.handler",
                    "role": {
                      "Fn::GetAtt": [
                        "LambdaTestProxyServiceRoleC38E1346",
                        "Arn"
                      ]
                    },
                    "runtime": "python3.8",
                    "memorySize": 512,
                    "timeout": 180
                  }
                }
              },
              "EventInvokeConfig": {
                "id": "EventInvokeConfig",
                "path": "Pattern3DemoStack/LambdaTestProxy/EventInvokeConfig",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "Pattern3DemoStack/LambdaTestProxy/EventInvokeConfig/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::EventInvokeConfig",
                      "aws:cdk:cloudformation:props": {
                        "functionName": {
                          "Ref": "LambdaTestProxyC124F12F"
                        },
                        "qualifier": "$LATEST",
                        "maximumRetryAttempts": 0
                      }
                    }
                  }
                }
              }
            }
          },
          "AssetParameters": {
            "id": "AssetParameters",
            "path": "Pattern3DemoStack/AssetParameters",
            "children": {
              "a8faf73dd06fdce53a8cc7dccaa7278bf903ad0747facec8ea710d6dda794b20": {
                "id": "a8faf73dd06fdce53a8cc7dccaa7278bf903ad0747facec8ea710d6dda794b20",
                "path": "Pattern3DemoStack/AssetParameters/a8faf73dd06fdce53a8cc7dccaa7278bf903ad0747facec8ea710d6dda794b20",
                "children": {
                  "S3Bucket": {
                    "id": "S3Bucket",
                    "path": "Pattern3DemoStack/AssetParameters/a8faf73dd06fdce53a8cc7dccaa7278bf903ad0747facec8ea710d6dda794b20/S3Bucket"
                  },
                  "S3VersionKey": {
                    "id": "S3VersionKey",
                    "path": "Pattern3DemoStack/AssetParameters/a8faf73dd06fdce53a8cc7dccaa7278bf903ad0747facec8ea710d6dda794b20/S3VersionKey"
                  },
                  "ArtifactHash": {
                    "id": "ArtifactHash",
                    "path": "Pattern3DemoStack/AssetParameters/a8faf73dd06fdce53a8cc7dccaa7278bf903ad0747facec8ea710d6dda794b20/ArtifactHash"
                  }
                }
              }
            }
          },
          "Pipeline": {
            "id": "Pipeline",
            "path": "Pattern3DemoStack/Pipeline",
            "children": {
              "ArtifactsBucketEncryptionKey": {
                "id": "ArtifactsBucketEncryptionKey",
                "path": "Pattern3DemoStack/Pipeline/ArtifactsBucketEncryptionKey",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "Pattern3DemoStack/Pipeline/ArtifactsBucketEncryptionKey/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::KMS::Key",
                      "aws:cdk:cloudformation:props": {
                        "keyPolicy": {
                          "Statement": [
                            {
                              "Action": [
                                "kms:Create*",
                                "kms:Describe*",
                                "kms:Enable*",
                                "kms:List*",
                                "kms:Put*",
                                "kms:Update*",
                                "kms:Revoke*",
                                "kms:Disable*",
                                "kms:Get*",
                                "kms:Delete*",
                                "kms:ScheduleKeyDeletion",
                                "kms:CancelKeyDeletion",
                                "kms:GenerateDataKey",
                                "kms:TagResource",
                                "kms:UntagResource"
                              ],
                              "Effect": "Allow",
                              "Principal": {
                                "AWS": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":iam::",
                                      {
                                        "Ref": "AWS::AccountId"
                                      },
                                      ":root"
                                    ]
                                  ]
                                }
                              },
                              "Resource": "*"
                            },
                            {
                              "Action": [
                                "kms:Decrypt",
                                "kms:DescribeKey",
                                "kms:Encrypt",
                                "kms:ReEncrypt*",
                                "kms:GenerateDataKey*"
                              ],
                              "Effect": "Allow",
                              "Principal": {
                                "AWS": {
                                  "Fn::GetAtt": [
                                    "PipelineRoleD68726F7",
                                    "Arn"
                                  ]
                                }
                              },
                              "Resource": "*"
                            },
                            {
                              "Action": [
                                "kms:Decrypt",
                                "kms:DescribeKey",
                                "kms:Encrypt",
                                "kms:ReEncrypt*",
                                "kms:GenerateDataKey*"
                              ],
                              "Effect": "Allow",
                              "Principal": {
                                "AWS": {
                                  "Fn::GetAtt": [
                                    "PipelineSourceCodeCommitSourceCodePipelineActionRole89AB8DD5",
                                    "Arn"
                                  ]
                                }
                              },
                              "Resource": "*"
                            },
                            {
                              "Action": [
                                "kms:Decrypt",
                                "kms:DescribeKey",
                                "kms:Encrypt",
                                "kms:ReEncrypt*",
                                "kms:GenerateDataKey*"
                              ],
                              "Effect": "Allow",
                              "Principal": {
                                "AWS": {
                                  "Fn::GetAtt": [
                                    "Pattern3BuildRole14631E0B",
                                    "Arn"
                                  ]
                                }
                              },
                              "Resource": "*"
                            },
                            {
                              "Action": [
                                "kms:Decrypt",
                                "kms:Encrypt",
                                "kms:ReEncrypt*",
                                "kms:GenerateDataKey*"
                              ],
                              "Effect": "Allow",
                              "Principal": {
                                "AWS": {
                                  "Fn::GetAtt": [
                                    "Pattern3BuildRole14631E0B",
                                    "Arn"
                                  ]
                                }
                              },
                              "Resource": "*"
                            },
                            {
                              "Action": [
                                "kms:Decrypt",
                                "kms:DescribeKey"
                              ],
                              "Effect": "Allow",
                              "Principal": {
                                "AWS": {
                                  "Fn::GetAtt": [
                                    "PipelineDeployTestEnvLambdasAndStateMachineTestEnvCFNDeployRole8C7DA9AE",
                                    "Arn"
                                  ]
                                }
                              },
                              "Resource": "*"
                            },
                            {
                              "Action": [
                                "kms:Decrypt",
                                "kms:DescribeKey"
                              ],
                              "Effect": "Allow",
                              "Principal": {
                                "AWS": {
                                  "Fn::GetAtt": [
                                    "PipelineDeployTestEnvLambdasAndStateMachineTestEnvCFNDeployCodePipelineActionRoleA8EDA6E5",
                                    "Arn"
                                  ]
                                }
                              },
                              "Resource": "*"
                            },
                            {
                              "Action": [
                                "kms:Decrypt",
                                "kms:DescribeKey"
                              ],
                              "Effect": "Allow",
                              "Principal": {
                                "AWS": {
                                  "Fn::GetAtt": [
                                    "PipelineDeployTestEnvLambdasAndStateMachineStepFunctionsCFNDeployRole0FFE5701",
                                    "Arn"
                                  ]
                                }
                              },
                              "Resource": "*"
                            },
                            {
                              "Action": [
                                "kms:Decrypt",
                                "kms:DescribeKey"
                              ],
                              "Effect": "Allow",
                              "Principal": {
                                "AWS": {
                                  "Fn::GetAtt": [
                                    "PipelineDeployTestEnvLambdasAndStateMachineStepFunctionsCFNDeployCodePipelineActionRoleA309F895",
                                    "Arn"
                                  ]
                                }
                              },
                              "Resource": "*"
                            },
                            {
                              "Action": [
                                "kms:Decrypt",
                                "kms:DescribeKey"
                              ],
                              "Effect": "Allow",
                              "Principal": {
                                "AWS": {
                                  "Fn::GetAtt": [
                                    "PipelineDeployProdEnvProdEnvCFNDeployRole4385DDBA",
                                    "Arn"
                                  ]
                                }
                              },
                              "Resource": "*"
                            },
                            {
                              "Action": [
                                "kms:Decrypt",
                                "kms:DescribeKey"
                              ],
                              "Effect": "Allow",
                              "Principal": {
                                "AWS": {
                                  "Fn::GetAtt": [
                                    "PipelineDeployProdEnvProdEnvCFNDeployCodePipelineActionRole04A5B224",
                                    "Arn"
                                  ]
                                }
                              },
                              "Resource": "*"
                            }
                          ],
                          "Version": "2012-10-17"
                        }
                      }
                    }
                  }
                }
              },
              "ArtifactsBucketEncryptionKeyAlias": {
                "id": "ArtifactsBucketEncryptionKeyAlias",
                "path": "Pattern3DemoStack/Pipeline/ArtifactsBucketEncryptionKeyAlias",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "Pattern3DemoStack/Pipeline/ArtifactsBucketEncryptionKeyAlias/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::KMS::Alias",
                      "aws:cdk:cloudformation:props": {
                        "aliasName": "alias/codepipeline-pattern3demostackpipeline918d2b91",
                        "targetKeyId": {
                          "Fn::GetAtt": [
                            "PipelineArtifactsBucketEncryptionKey01D58D69",
                            "Arn"
                          ]
                        }
                      }
                    }
                  }
                }
              },
              "ArtifactsBucket": {
                "id": "ArtifactsBucket",
                "path": "Pattern3DemoStack/Pipeline/ArtifactsBucket",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "Pattern3DemoStack/Pipeline/ArtifactsBucket/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::S3::Bucket",
                      "aws:cdk:cloudformation:props": {
                        "bucketEncryption": {
                          "serverSideEncryptionConfiguration": [
                            {
                              "serverSideEncryptionByDefault": {
                                "sseAlgorithm": "aws:kms",
                                "kmsMasterKeyId": {
                                  "Fn::GetAtt": [
                                    "PipelineArtifactsBucketEncryptionKey01D58D69",
                                    "Arn"
                                  ]
                                }
                              }
                            }
                          ]
                        },
                        "publicAccessBlockConfiguration": {
                          "blockPublicAcls": true,
                          "blockPublicPolicy": true,
                          "ignorePublicAcls": true,
                          "restrictPublicBuckets": true
                        }
                      }
                    }
                  },
                  "Notifications": {
                    "id": "Notifications",
                    "path": "Pattern3DemoStack/Pipeline/ArtifactsBucket/Notifications"
                  }
                }
              },
              "Role": {
                "id": "Role",
                "path": "Pattern3DemoStack/Pipeline/Role",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "Pattern3DemoStack/Pipeline/Role/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "codepipeline.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        }
                      }
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "Pattern3DemoStack/Pipeline/Role/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "Pattern3DemoStack/Pipeline/Role/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "s3:GetObject*",
                                    "s3:GetBucket*",
                                    "s3:List*",
                                    "s3:DeleteObject*",
                                    "s3:PutObject*",
                                    "s3:Abort*"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    {
                                      "Fn::GetAtt": [
                                        "PipelineArtifactsBucket22248F97",
                                        "Arn"
                                      ]
                                    },
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          {
                                            "Fn::GetAtt": [
                                              "PipelineArtifactsBucket22248F97",
                                              "Arn"
                                            ]
                                          },
                                          "/*"
                                        ]
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Action": [
                                    "kms:Decrypt",
                                    "kms:DescribeKey",
                                    "kms:Encrypt",
                                    "kms:ReEncrypt*",
                                    "kms:GenerateDataKey*"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "PipelineArtifactsBucketEncryptionKey01D58D69",
                                      "Arn"
                                    ]
                                  }
                                },
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "PipelineSourceCodeCommitSourceCodePipelineActionRole89AB8DD5",
                                      "Arn"
                                    ]
                                  }
                                },
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "PipelineBuildCodePipelineActionRoleD77A08E6",
                                      "Arn"
                                    ]
                                  }
                                },
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "PipelineDeployTestEnvLambdasAndStateMachineTestEnvCFNDeployCodePipelineActionRoleA8EDA6E5",
                                      "Arn"
                                    ]
                                  }
                                },
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "PipelineDeployTestEnvLambdasAndStateMachineStepFunctionsCFNDeployCodePipelineActionRoleA309F895",
                                      "Arn"
                                    ]
                                  }
                                },
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "PipelineTestTestInvokeStateMachineCodePipelineActionRoleFDB3092F",
                                      "Arn"
                                    ]
                                  }
                                },
                                {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "PipelineDeployProdEnvProdEnvCFNDeployCodePipelineActionRole04A5B224",
                                      "Arn"
                                    ]
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "PipelineRoleDefaultPolicyC7A05455",
                            "roles": [
                              {
                                "Ref": "PipelineRoleD68726F7"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "Pattern3DemoStack/Pipeline/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::CodePipeline::Pipeline",
                  "aws:cdk:cloudformation:props": {
                    "roleArn": {
                      "Fn::GetAtt": [
                        "PipelineRoleD68726F7",
                        "Arn"
                      ]
                    },
                    "stages": [
                      {
                        "name": "Source",
                        "actions": [
                          {
                            "name": "CodeCommit_Source",
                            "outputArtifacts": [
                              {
                                "name": "Artifact_Source_CodeCommit_Source"
                              }
                            ],
                            "actionTypeId": {
                              "category": "Source",
                              "version": "1",
                              "owner": "AWS",
                              "provider": "CodeCommit"
                            },
                            "configuration": {
                              "RepositoryName": {
                                "Fn::GetAtt": [
                                  "Pattern3Repo1B04F5EC",
                                  "Name"
                                ]
                              },
                              "BranchName": "baseline",
                              "PollForSourceChanges": false
                            },
                            "runOrder": 1,
                            "roleArn": {
                              "Fn::GetAtt": [
                                "PipelineSourceCodeCommitSourceCodePipelineActionRole89AB8DD5",
                                "Arn"
                              ]
                            }
                          }
                        ]
                      },
                      {
                        "name": "Build",
                        "actions": [
                          {
                            "name": "Build",
                            "inputArtifacts": [
                              {
                                "name": "Artifact_Source_CodeCommit_Source"
                              }
                            ],
                            "outputArtifacts": [
                              {
                                "name": "BuildOutput"
                              },
                              {
                                "name": "LambdaBuildOutput"
                              }
                            ],
                            "actionTypeId": {
                              "category": "Build",
                              "version": "1",
                              "owner": "AWS",
                              "provider": "CodeBuild"
                            },
                            "configuration": {
                              "ProjectName": {
                                "Ref": "Pattern3Build724CA04B"
                              }
                            },
                            "runOrder": 1,
                            "roleArn": {
                              "Fn::GetAtt": [
                                "PipelineBuildCodePipelineActionRoleD77A08E6",
                                "Arn"
                              ]
                            }
                          }
                        ]
                      },
                      {
                        "name": "DeployTestEnvLambdasAndStateMachine",
                        "actions": [
                          {
                            "name": "TestEnv_CFN_Deploy",
                            "inputArtifacts": [
                              {
                                "name": "BuildOutput"
                              }
                            ],
                            "actionTypeId": {
                              "category": "Deploy",
                              "version": "1",
                              "owner": "AWS",
                              "provider": "CloudFormation"
                            },
                            "configuration": {
                              "StackName": "Pattern3TestEnvStack",
                              "Capabilities": "CAPABILITY_NAMED_IAM",
                              "RoleArn": {
                                "Fn::GetAtt": [
                                  "PipelineDeployTestEnvLambdasAndStateMachineTestEnvCFNDeployRole8C7DA9AE",
                                  "Arn"
                                ]
                              },
                              "ActionMode": "CREATE_UPDATE",
                              "TemplatePath": "BuildOutput::Pattern3TestEnvStack.template.json"
                            },
                            "runOrder": 1,
                            "roleArn": {
                              "Fn::GetAtt": [
                                "PipelineDeployTestEnvLambdasAndStateMachineTestEnvCFNDeployCodePipelineActionRoleA8EDA6E5",
                                "Arn"
                              ]
                            }
                          },
                          {
                            "name": "StepFunctions_CFN_Deploy",
                            "inputArtifacts": [
                              {
                                "name": "BuildOutput"
                              },
                              {
                                "name": "LambdaBuildOutput"
                              }
                            ],
                            "actionTypeId": {
                              "category": "Deploy",
                              "version": "1",
                              "owner": "AWS",
                              "provider": "CloudFormation"
                            },
                            "configuration": {
                              "StackName": "StepFunctionsTestStack",
                              "Capabilities": "CAPABILITY_NAMED_IAM",
                              "RoleArn": {
                                "Fn::GetAtt": [
                                  "PipelineDeployTestEnvLambdasAndStateMachineStepFunctionsCFNDeployRole0FFE5701",
                                  "Arn"
                                ]
                              },
                              "ParameterOverrides": "{\"LambdaTestDefaultsLambdaSourceBucketNameParameter537B577C\":{\"Fn::GetArtifactAtt\":[\"LambdaBuildOutput\",\"BucketName\"]},\"LambdaTestDefaultsLambdaSourceObjectKeyParameterD3ED54FE\":{\"Fn::GetArtifactAtt\":[\"LambdaBuildOutput\",\"ObjectKey\"]}}",
                              "ActionMode": "CREATE_UPDATE",
                              "TemplatePath": "BuildOutput::StepFunctionsTestStack.template.json"
                            },
                            "runOrder": 1,
                            "roleArn": {
                              "Fn::GetAtt": [
                                "PipelineDeployTestEnvLambdasAndStateMachineStepFunctionsCFNDeployCodePipelineActionRoleA309F895",
                                "Arn"
                              ]
                            },
                            "namespace": "StepFunctions_CFN_Deploy"
                          }
                        ]
                      },
                      {
                        "name": "Test",
                        "actions": [
                          {
                            "name": "TestInvokeStateMachine",
                            "actionTypeId": {
                              "category": "Invoke",
                              "version": "1",
                              "owner": "AWS",
                              "provider": "Lambda"
                            },
                            "configuration": {
                              "FunctionName": {
                                "Ref": "LambdaTestProxyC124F12F"
                              },
                              "UserParameters": "{\"StateMachineArn\":\"#{StepFunctions_CFN_Deploy.StateMachineArn}\"}"
                            },
                            "runOrder": 1,
                            "roleArn": {
                              "Fn::GetAtt": [
                                "PipelineTestTestInvokeStateMachineCodePipelineActionRoleFDB3092F",
                                "Arn"
                              ]
                            }
                          }
                        ]
                      },
                      {
                        "name": "DeployProdEnv",
                        "actions": [
                          {
                            "name": "ProdEnv_CFN_Deploy",
                            "inputArtifacts": [
                              {
                                "name": "BuildOutput"
                              }
                            ],
                            "actionTypeId": {
                              "category": "Deploy",
                              "version": "1",
                              "owner": "AWS",
                              "provider": "CloudFormation"
                            },
                            "configuration": {
                              "StackName": "Pattern3ProdEnvStack",
                              "Capabilities": "CAPABILITY_NAMED_IAM",
                              "RoleArn": {
                                "Fn::GetAtt": [
                                  "PipelineDeployProdEnvProdEnvCFNDeployRole4385DDBA",
                                  "Arn"
                                ]
                              },
                              "ActionMode": "CREATE_UPDATE",
                              "TemplatePath": "BuildOutput::Pattern3ProdEnvStack.template.json"
                            },
                            "runOrder": 1,
                            "roleArn": {
                              "Fn::GetAtt": [
                                "PipelineDeployProdEnvProdEnvCFNDeployCodePipelineActionRole04A5B224",
                                "Arn"
                              ]
                            }
                          }
                        ]
                      }
                    ],
                    "artifactStore": {
                      "type": "S3",
                      "location": {
                        "Ref": "PipelineArtifactsBucket22248F97"
                      },
                      "encryptionKey": {
                        "type": "KMS",
                        "id": {
                          "Fn::GetAtt": [
                            "PipelineArtifactsBucketEncryptionKey01D58D69",
                            "Arn"
                          ]
                        }
                      }
                    }
                  }
                }
              },
              "Source": {
                "id": "Source",
                "path": "Pattern3DemoStack/Pipeline/Source",
                "children": {
                  "CodeCommit_Source": {
                    "id": "CodeCommit_Source",
                    "path": "Pattern3DemoStack/Pipeline/Source/CodeCommit_Source",
                    "children": {
                      "CodePipelineActionRole": {
                        "id": "CodePipelineActionRole",
                        "path": "Pattern3DemoStack/Pipeline/Source/CodeCommit_Source/CodePipelineActionRole",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "Pattern3DemoStack/Pipeline/Source/CodeCommit_Source/CodePipelineActionRole/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                              "aws:cdk:cloudformation:props": {
                                "assumeRolePolicyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Principal": {
                                        "AWS": {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":iam::",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":root"
                                            ]
                                          ]
                                        }
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                }
                              }
                            }
                          },
                          "DefaultPolicy": {
                            "id": "DefaultPolicy",
                            "path": "Pattern3DemoStack/Pipeline/Source/CodeCommit_Source/CodePipelineActionRole/DefaultPolicy",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "Pattern3DemoStack/Pipeline/Source/CodeCommit_Source/CodePipelineActionRole/DefaultPolicy/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                  "aws:cdk:cloudformation:props": {
                                    "policyDocument": {
                                      "Statement": [
                                        {
                                          "Action": [
                                            "s3:GetObject*",
                                            "s3:GetBucket*",
                                            "s3:List*",
                                            "s3:DeleteObject*",
                                            "s3:PutObject*",
                                            "s3:Abort*"
                                          ],
                                          "Effect": "Allow",
                                          "Resource": [
                                            {
                                              "Fn::GetAtt": [
                                                "PipelineArtifactsBucket22248F97",
                                                "Arn"
                                              ]
                                            },
                                            {
                                              "Fn::Join": [
                                                "",
                                                [
                                                  {
                                                    "Fn::GetAtt": [
                                                      "PipelineArtifactsBucket22248F97",
                                                      "Arn"
                                                    ]
                                                  },
                                                  "/*"
                                                ]
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "Action": [
                                            "kms:Decrypt",
                                            "kms:DescribeKey",
                                            "kms:Encrypt",
                                            "kms:ReEncrypt*",
                                            "kms:GenerateDataKey*"
                                          ],
                                          "Effect": "Allow",
                                          "Resource": {
                                            "Fn::GetAtt": [
                                              "PipelineArtifactsBucketEncryptionKey01D58D69",
                                              "Arn"
                                            ]
                                          }
                                        },
                                        {
                                          "Action": [
                                            "codecommit:GetBranch",
                                            "codecommit:GetCommit",
                                            "codecommit:UploadArchive",
                                            "codecommit:GetUploadArchiveStatus",
                                            "codecommit:CancelUploadArchive"
                                          ],
                                          "Effect": "Allow",
                                          "Resource": {
                                            "Fn::GetAtt": [
                                              "Pattern3Repo1B04F5EC",
                                              "Arn"
                                            ]
                                          }
                                        }
                                      ],
                                      "Version": "2012-10-17"
                                    },
                                    "policyName": "PipelineSourceCodeCommitSourceCodePipelineActionRoleDefaultPolicyD20EE23A",
                                    "roles": [
                                      {
                                        "Ref": "PipelineSourceCodeCommitSourceCodePipelineActionRole89AB8DD5"
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "EventsRole": {
                "id": "EventsRole",
                "path": "Pattern3DemoStack/Pipeline/EventsRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "Pattern3DemoStack/Pipeline/EventsRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "events.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        }
                      }
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "Pattern3DemoStack/Pipeline/EventsRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "Pattern3DemoStack/Pipeline/EventsRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": "codepipeline:StartPipelineExecution",
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":codepipeline:",
                                        {
                                          "Ref": "AWS::Region"
                                        },
                                        ":",
                                        {
                                          "Ref": "AWS::AccountId"
                                        },
                                        ":",
                                        {
                                          "Ref": "PipelineC660917D"
                                        }
                                      ]
                                    ]
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "PipelineEventsRoleDefaultPolicyFF4FCCE0",
                            "roles": [
                              {
                                "Ref": "PipelineEventsRole46BEEA7C"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              },
              "Build": {
                "id": "Build",
                "path": "Pattern3DemoStack/Pipeline/Build",
                "children": {
                  "Build": {
                    "id": "Build",
                    "path": "Pattern3DemoStack/Pipeline/Build/Build",
                    "children": {
                      "CodePipelineActionRole": {
                        "id": "CodePipelineActionRole",
                        "path": "Pattern3DemoStack/Pipeline/Build/Build/CodePipelineActionRole",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "Pattern3DemoStack/Pipeline/Build/Build/CodePipelineActionRole/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                              "aws:cdk:cloudformation:props": {
                                "assumeRolePolicyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Principal": {
                                        "AWS": {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":iam::",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":root"
                                            ]
                                          ]
                                        }
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                }
                              }
                            }
                          },
                          "DefaultPolicy": {
                            "id": "DefaultPolicy",
                            "path": "Pattern3DemoStack/Pipeline/Build/Build/CodePipelineActionRole/DefaultPolicy",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "Pattern3DemoStack/Pipeline/Build/Build/CodePipelineActionRole/DefaultPolicy/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                  "aws:cdk:cloudformation:props": {
                                    "policyDocument": {
                                      "Statement": [
                                        {
                                          "Action": [
                                            "codebuild:BatchGetBuilds",
                                            "codebuild:StartBuild",
                                            "codebuild:StopBuild"
                                          ],
                                          "Effect": "Allow",
                                          "Resource": {
                                            "Fn::GetAtt": [
                                              "Pattern3Build724CA04B",
                                              "Arn"
                                            ]
                                          }
                                        }
                                      ],
                                      "Version": "2012-10-17"
                                    },
                                    "policyName": "PipelineBuildCodePipelineActionRoleDefaultPolicyC9CB73F8",
                                    "roles": [
                                      {
                                        "Ref": "PipelineBuildCodePipelineActionRoleD77A08E6"
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "DeployTestEnvLambdasAndStateMachine": {
                "id": "DeployTestEnvLambdasAndStateMachine",
                "path": "Pattern3DemoStack/Pipeline/DeployTestEnvLambdasAndStateMachine",
                "children": {
                  "TestEnv_CFN_Deploy": {
                    "id": "TestEnv_CFN_Deploy",
                    "path": "Pattern3DemoStack/Pipeline/DeployTestEnvLambdasAndStateMachine/TestEnv_CFN_Deploy",
                    "children": {
                      "CodePipelineActionRole": {
                        "id": "CodePipelineActionRole",
                        "path": "Pattern3DemoStack/Pipeline/DeployTestEnvLambdasAndStateMachine/TestEnv_CFN_Deploy/CodePipelineActionRole",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "Pattern3DemoStack/Pipeline/DeployTestEnvLambdasAndStateMachine/TestEnv_CFN_Deploy/CodePipelineActionRole/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                              "aws:cdk:cloudformation:props": {
                                "assumeRolePolicyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Principal": {
                                        "AWS": {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":iam::",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":root"
                                            ]
                                          ]
                                        }
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                }
                              }
                            }
                          },
                          "8389e75f-0810-4838-bf64-d6f85a95cf83": {
                            "id": "8389e75f-0810-4838-bf64-d6f85a95cf83",
                            "path": "Pattern3DemoStack/Pipeline/DeployTestEnvLambdasAndStateMachine/TestEnv_CFN_Deploy/CodePipelineActionRole/8389e75f-0810-4838-bf64-d6f85a95cf83"
                          },
                          "DefaultPolicy": {
                            "id": "DefaultPolicy",
                            "path": "Pattern3DemoStack/Pipeline/DeployTestEnvLambdasAndStateMachine/TestEnv_CFN_Deploy/CodePipelineActionRole/DefaultPolicy",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "Pattern3DemoStack/Pipeline/DeployTestEnvLambdasAndStateMachine/TestEnv_CFN_Deploy/CodePipelineActionRole/DefaultPolicy/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                  "aws:cdk:cloudformation:props": {
                                    "policyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "iam:PassRole",
                                          "Effect": "Allow",
                                          "Resource": {
                                            "Fn::GetAtt": [
                                              "PipelineDeployTestEnvLambdasAndStateMachineTestEnvCFNDeployRole8C7DA9AE",
                                              "Arn"
                                            ]
                                          }
                                        },
                                        {
                                          "Action": [
                                            "s3:GetObject*",
                                            "s3:GetBucket*",
                                            "s3:List*"
                                          ],
                                          "Effect": "Allow",
                                          "Resource": [
                                            {
                                              "Fn::GetAtt": [
                                                "PipelineArtifactsBucket22248F97",
                                                "Arn"
                                              ]
                                            },
                                            {
                                              "Fn::Join": [
                                                "",
                                                [
                                                  {
                                                    "Fn::GetAtt": [
                                                      "PipelineArtifactsBucket22248F97",
                                                      "Arn"
                                                    ]
                                                  },
                                                  "/*"
                                                ]
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "Action": [
                                            "kms:Decrypt",
                                            "kms:DescribeKey"
                                          ],
                                          "Effect": "Allow",
                                          "Resource": {
                                            "Fn::GetAtt": [
                                              "PipelineArtifactsBucketEncryptionKey01D58D69",
                                              "Arn"
                                            ]
                                          }
                                        },
                                        {
                                          "Action": [
                                            "cloudformation:CreateStack",
                                            "cloudformation:DescribeStack*",
                                            "cloudformation:GetStackPolicy",
                                            "cloudformation:GetTemplate*",
                                            "cloudformation:SetStackPolicy",
                                            "cloudformation:UpdateStack",
                                            "cloudformation:ValidateTemplate"
                                          ],
                                          "Effect": "Allow",
                                          "Resource": {
                                            "Fn::Join": [
                                              "",
                                              [
                                                "arn:",
                                                {
                                                  "Ref": "AWS::Partition"
                                                },
                                                ":cloudformation:",
                                                {
                                                  "Ref": "AWS::Region"
                                                },
                                                ":",
                                                {
                                                  "Ref": "AWS::AccountId"
                                                },
                                                ":stack/Pattern3TestEnvStack/*"
                                              ]
                                            ]
                                          }
                                        }
                                      ],
                                      "Version": "2012-10-17"
                                    },
                                    "policyName": "PipelineDeployTestEnvLambdasAndStateMachineTestEnvCFNDeployCodePipelineActionRoleDefaultPolicyC57A427E",
                                    "roles": [
                                      {
                                        "Ref": "PipelineDeployTestEnvLambdasAndStateMachineTestEnvCFNDeployCodePipelineActionRoleA8EDA6E5"
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "Role": {
                        "id": "Role",
                        "path": "Pattern3DemoStack/Pipeline/DeployTestEnvLambdasAndStateMachine/TestEnv_CFN_Deploy/Role",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "Pattern3DemoStack/Pipeline/DeployTestEnvLambdasAndStateMachine/TestEnv_CFN_Deploy/Role/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                              "aws:cdk:cloudformation:props": {
                                "assumeRolePolicyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Principal": {
                                        "Service": "cloudformation.amazonaws.com"
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                }
                              }
                            }
                          },
                          "DefaultPolicy": {
                            "id": "DefaultPolicy",
                            "path": "Pattern3DemoStack/Pipeline/DeployTestEnvLambdasAndStateMachine/TestEnv_CFN_Deploy/Role/DefaultPolicy",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "Pattern3DemoStack/Pipeline/DeployTestEnvLambdasAndStateMachine/TestEnv_CFN_Deploy/Role/DefaultPolicy/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                  "aws:cdk:cloudformation:props": {
                                    "policyDocument": {
                                      "Statement": [
                                        {
                                          "Action": [
                                            "s3:GetObject*",
                                            "s3:GetBucket*",
                                            "s3:List*"
                                          ],
                                          "Effect": "Allow",
                                          "Resource": [
                                            {
                                              "Fn::GetAtt": [
                                                "PipelineArtifactsBucket22248F97",
                                                "Arn"
                                              ]
                                            },
                                            {
                                              "Fn::Join": [
                                                "",
                                                [
                                                  {
                                                    "Fn::GetAtt": [
                                                      "PipelineArtifactsBucket22248F97",
                                                      "Arn"
                                                    ]
                                                  },
                                                  "/*"
                                                ]
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "Action": [
                                            "kms:Decrypt",
                                            "kms:DescribeKey"
                                          ],
                                          "Effect": "Allow",
                                          "Resource": {
                                            "Fn::GetAtt": [
                                              "PipelineArtifactsBucketEncryptionKey01D58D69",
                                              "Arn"
                                            ]
                                          }
                                        },
                                        {
                                          "Action": "*",
                                          "Effect": "Allow",
                                          "Resource": "*"
                                        }
                                      ],
                                      "Version": "2012-10-17"
                                    },
                                    "policyName": "PipelineDeployTestEnvLambdasAndStateMachineTestEnvCFNDeployRoleDefaultPolicy7E857D8E",
                                    "roles": [
                                      {
                                        "Ref": "PipelineDeployTestEnvLambdasAndStateMachineTestEnvCFNDeployRole8C7DA9AE"
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "StepFunctions_CFN_Deploy": {
                    "id": "StepFunctions_CFN_Deploy",
                    "path": "Pattern3DemoStack/Pipeline/DeployTestEnvLambdasAndStateMachine/StepFunctions_CFN_Deploy",
                    "children": {
                      "CodePipelineActionRole": {
                        "id": "CodePipelineActionRole",
                        "path": "Pattern3DemoStack/Pipeline/DeployTestEnvLambdasAndStateMachine/StepFunctions_CFN_Deploy/CodePipelineActionRole",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "Pattern3DemoStack/Pipeline/DeployTestEnvLambdasAndStateMachine/StepFunctions_CFN_Deploy/CodePipelineActionRole/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                              "aws:cdk:cloudformation:props": {
                                "assumeRolePolicyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Principal": {
                                        "AWS": {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":iam::",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":root"
                                            ]
                                          ]
                                        }
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                }
                              }
                            }
                          },
                          "8389e75f-0810-4838-bf64-d6f85a95cf83": {
                            "id": "8389e75f-0810-4838-bf64-d6f85a95cf83",
                            "path": "Pattern3DemoStack/Pipeline/DeployTestEnvLambdasAndStateMachine/StepFunctions_CFN_Deploy/CodePipelineActionRole/8389e75f-0810-4838-bf64-d6f85a95cf83"
                          },
                          "DefaultPolicy": {
                            "id": "DefaultPolicy",
                            "path": "Pattern3DemoStack/Pipeline/DeployTestEnvLambdasAndStateMachine/StepFunctions_CFN_Deploy/CodePipelineActionRole/DefaultPolicy",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "Pattern3DemoStack/Pipeline/DeployTestEnvLambdasAndStateMachine/StepFunctions_CFN_Deploy/CodePipelineActionRole/DefaultPolicy/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                  "aws:cdk:cloudformation:props": {
                                    "policyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "iam:PassRole",
                                          "Effect": "Allow",
                                          "Resource": {
                                            "Fn::GetAtt": [
                                              "PipelineDeployTestEnvLambdasAndStateMachineStepFunctionsCFNDeployRole0FFE5701",
                                              "Arn"
                                            ]
                                          }
                                        },
                                        {
                                          "Action": [
                                            "s3:GetObject*",
                                            "s3:GetBucket*",
                                            "s3:List*"
                                          ],
                                          "Effect": "Allow",
                                          "Resource": [
                                            {
                                              "Fn::GetAtt": [
                                                "PipelineArtifactsBucket22248F97",
                                                "Arn"
                                              ]
                                            },
                                            {
                                              "Fn::Join": [
                                                "",
                                                [
                                                  {
                                                    "Fn::GetAtt": [
                                                      "PipelineArtifactsBucket22248F97",
                                                      "Arn"
                                                    ]
                                                  },
                                                  "/*"
                                                ]
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "Action": [
                                            "kms:Decrypt",
                                            "kms:DescribeKey"
                                          ],
                                          "Effect": "Allow",
                                          "Resource": {
                                            "Fn::GetAtt": [
                                              "PipelineArtifactsBucketEncryptionKey01D58D69",
                                              "Arn"
                                            ]
                                          }
                                        },
                                        {
                                          "Action": [
                                            "cloudformation:CreateStack",
                                            "cloudformation:DescribeStack*",
                                            "cloudformation:GetStackPolicy",
                                            "cloudformation:GetTemplate*",
                                            "cloudformation:SetStackPolicy",
                                            "cloudformation:UpdateStack",
                                            "cloudformation:ValidateTemplate"
                                          ],
                                          "Effect": "Allow",
                                          "Resource": {
                                            "Fn::Join": [
                                              "",
                                              [
                                                "arn:",
                                                {
                                                  "Ref": "AWS::Partition"
                                                },
                                                ":cloudformation:",
                                                {
                                                  "Ref": "AWS::Region"
                                                },
                                                ":",
                                                {
                                                  "Ref": "AWS::AccountId"
                                                },
                                                ":stack/StepFunctionsTestStack/*"
                                              ]
                                            ]
                                          }
                                        }
                                      ],
                                      "Version": "2012-10-17"
                                    },
                                    "policyName": "PipelineDeployTestEnvLambdasAndStateMachineStepFunctionsCFNDeployCodePipelineActionRoleDefaultPolicy8BF974EF",
                                    "roles": [
                                      {
                                        "Ref": "PipelineDeployTestEnvLambdasAndStateMachineStepFunctionsCFNDeployCodePipelineActionRoleA309F895"
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "Role": {
                        "id": "Role",
                        "path": "Pattern3DemoStack/Pipeline/DeployTestEnvLambdasAndStateMachine/StepFunctions_CFN_Deploy/Role",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "Pattern3DemoStack/Pipeline/DeployTestEnvLambdasAndStateMachine/StepFunctions_CFN_Deploy/Role/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                              "aws:cdk:cloudformation:props": {
                                "assumeRolePolicyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Principal": {
                                        "Service": "cloudformation.amazonaws.com"
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                }
                              }
                            }
                          },
                          "DefaultPolicy": {
                            "id": "DefaultPolicy",
                            "path": "Pattern3DemoStack/Pipeline/DeployTestEnvLambdasAndStateMachine/StepFunctions_CFN_Deploy/Role/DefaultPolicy",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "Pattern3DemoStack/Pipeline/DeployTestEnvLambdasAndStateMachine/StepFunctions_CFN_Deploy/Role/DefaultPolicy/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                  "aws:cdk:cloudformation:props": {
                                    "policyDocument": {
                                      "Statement": [
                                        {
                                          "Action": [
                                            "s3:GetObject*",
                                            "s3:GetBucket*",
                                            "s3:List*"
                                          ],
                                          "Effect": "Allow",
                                          "Resource": [
                                            {
                                              "Fn::GetAtt": [
                                                "PipelineArtifactsBucket22248F97",
                                                "Arn"
                                              ]
                                            },
                                            {
                                              "Fn::Join": [
                                                "",
                                                [
                                                  {
                                                    "Fn::GetAtt": [
                                                      "PipelineArtifactsBucket22248F97",
                                                      "Arn"
                                                    ]
                                                  },
                                                  "/*"
                                                ]
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "Action": [
                                            "kms:Decrypt",
                                            "kms:DescribeKey"
                                          ],
                                          "Effect": "Allow",
                                          "Resource": {
                                            "Fn::GetAtt": [
                                              "PipelineArtifactsBucketEncryptionKey01D58D69",
                                              "Arn"
                                            ]
                                          }
                                        },
                                        {
                                          "Action": "*",
                                          "Effect": "Allow",
                                          "Resource": "*"
                                        }
                                      ],
                                      "Version": "2012-10-17"
                                    },
                                    "policyName": "PipelineDeployTestEnvLambdasAndStateMachineStepFunctionsCFNDeployRoleDefaultPolicyAD9A7502",
                                    "roles": [
                                      {
                                        "Ref": "PipelineDeployTestEnvLambdasAndStateMachineStepFunctionsCFNDeployRole0FFE5701"
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "Test": {
                "id": "Test",
                "path": "Pattern3DemoStack/Pipeline/Test",
                "children": {
                  "TestInvokeStateMachine": {
                    "id": "TestInvokeStateMachine",
                    "path": "Pattern3DemoStack/Pipeline/Test/TestInvokeStateMachine",
                    "children": {
                      "CodePipelineActionRole": {
                        "id": "CodePipelineActionRole",
                        "path": "Pattern3DemoStack/Pipeline/Test/TestInvokeStateMachine/CodePipelineActionRole",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "Pattern3DemoStack/Pipeline/Test/TestInvokeStateMachine/CodePipelineActionRole/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                              "aws:cdk:cloudformation:props": {
                                "assumeRolePolicyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Principal": {
                                        "AWS": {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":iam::",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":root"
                                            ]
                                          ]
                                        }
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                }
                              }
                            }
                          },
                          "DefaultPolicy": {
                            "id": "DefaultPolicy",
                            "path": "Pattern3DemoStack/Pipeline/Test/TestInvokeStateMachine/CodePipelineActionRole/DefaultPolicy",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "Pattern3DemoStack/Pipeline/Test/TestInvokeStateMachine/CodePipelineActionRole/DefaultPolicy/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                  "aws:cdk:cloudformation:props": {
                                    "policyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "lambda:ListFunctions",
                                          "Effect": "Allow",
                                          "Resource": "*"
                                        },
                                        {
                                          "Action": "lambda:InvokeFunction",
                                          "Effect": "Allow",
                                          "Resource": {
                                            "Fn::GetAtt": [
                                              "LambdaTestProxyC124F12F",
                                              "Arn"
                                            ]
                                          }
                                        }
                                      ],
                                      "Version": "2012-10-17"
                                    },
                                    "policyName": "PipelineTestTestInvokeStateMachineCodePipelineActionRoleDefaultPolicy22E40A4A",
                                    "roles": [
                                      {
                                        "Ref": "PipelineTestTestInvokeStateMachineCodePipelineActionRoleFDB3092F"
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "DeployProdEnv": {
                "id": "DeployProdEnv",
                "path": "Pattern3DemoStack/Pipeline/DeployProdEnv",
                "children": {
                  "ProdEnv_CFN_Deploy": {
                    "id": "ProdEnv_CFN_Deploy",
                    "path": "Pattern3DemoStack/Pipeline/DeployProdEnv/ProdEnv_CFN_Deploy",
                    "children": {
                      "CodePipelineActionRole": {
                        "id": "CodePipelineActionRole",
                        "path": "Pattern3DemoStack/Pipeline/DeployProdEnv/ProdEnv_CFN_Deploy/CodePipelineActionRole",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "Pattern3DemoStack/Pipeline/DeployProdEnv/ProdEnv_CFN_Deploy/CodePipelineActionRole/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                              "aws:cdk:cloudformation:props": {
                                "assumeRolePolicyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Principal": {
                                        "AWS": {
                                          "Fn::Join": [
                                            "",
                                            [
                                              "arn:",
                                              {
                                                "Ref": "AWS::Partition"
                                              },
                                              ":iam::",
                                              {
                                                "Ref": "AWS::AccountId"
                                              },
                                              ":root"
                                            ]
                                          ]
                                        }
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                }
                              }
                            }
                          },
                          "8389e75f-0810-4838-bf64-d6f85a95cf83": {
                            "id": "8389e75f-0810-4838-bf64-d6f85a95cf83",
                            "path": "Pattern3DemoStack/Pipeline/DeployProdEnv/ProdEnv_CFN_Deploy/CodePipelineActionRole/8389e75f-0810-4838-bf64-d6f85a95cf83"
                          },
                          "DefaultPolicy": {
                            "id": "DefaultPolicy",
                            "path": "Pattern3DemoStack/Pipeline/DeployProdEnv/ProdEnv_CFN_Deploy/CodePipelineActionRole/DefaultPolicy",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "Pattern3DemoStack/Pipeline/DeployProdEnv/ProdEnv_CFN_Deploy/CodePipelineActionRole/DefaultPolicy/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                  "aws:cdk:cloudformation:props": {
                                    "policyDocument": {
                                      "Statement": [
                                        {
                                          "Action": "iam:PassRole",
                                          "Effect": "Allow",
                                          "Resource": {
                                            "Fn::GetAtt": [
                                              "PipelineDeployProdEnvProdEnvCFNDeployRole4385DDBA",
                                              "Arn"
                                            ]
                                          }
                                        },
                                        {
                                          "Action": [
                                            "s3:GetObject*",
                                            "s3:GetBucket*",
                                            "s3:List*"
                                          ],
                                          "Effect": "Allow",
                                          "Resource": [
                                            {
                                              "Fn::GetAtt": [
                                                "PipelineArtifactsBucket22248F97",
                                                "Arn"
                                              ]
                                            },
                                            {
                                              "Fn::Join": [
                                                "",
                                                [
                                                  {
                                                    "Fn::GetAtt": [
                                                      "PipelineArtifactsBucket22248F97",
                                                      "Arn"
                                                    ]
                                                  },
                                                  "/*"
                                                ]
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "Action": [
                                            "kms:Decrypt",
                                            "kms:DescribeKey"
                                          ],
                                          "Effect": "Allow",
                                          "Resource": {
                                            "Fn::GetAtt": [
                                              "PipelineArtifactsBucketEncryptionKey01D58D69",
                                              "Arn"
                                            ]
                                          }
                                        },
                                        {
                                          "Action": [
                                            "cloudformation:CreateStack",
                                            "cloudformation:DescribeStack*",
                                            "cloudformation:GetStackPolicy",
                                            "cloudformation:GetTemplate*",
                                            "cloudformation:SetStackPolicy",
                                            "cloudformation:UpdateStack",
                                            "cloudformation:ValidateTemplate"
                                          ],
                                          "Effect": "Allow",
                                          "Resource": {
                                            "Fn::Join": [
                                              "",
                                              [
                                                "arn:",
                                                {
                                                  "Ref": "AWS::Partition"
                                                },
                                                ":cloudformation:",
                                                {
                                                  "Ref": "AWS::Region"
                                                },
                                                ":",
                                                {
                                                  "Ref": "AWS::AccountId"
                                                },
                                                ":stack/Pattern3ProdEnvStack/*"
                                              ]
                                            ]
                                          }
                                        }
                                      ],
                                      "Version": "2012-10-17"
                                    },
                                    "policyName": "PipelineDeployProdEnvProdEnvCFNDeployCodePipelineActionRoleDefaultPolicy0AF97859",
                                    "roles": [
                                      {
                                        "Ref": "PipelineDeployProdEnvProdEnvCFNDeployCodePipelineActionRole04A5B224"
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "Role": {
                        "id": "Role",
                        "path": "Pattern3DemoStack/Pipeline/DeployProdEnv/ProdEnv_CFN_Deploy/Role",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "Pattern3DemoStack/Pipeline/DeployProdEnv/ProdEnv_CFN_Deploy/Role/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                              "aws:cdk:cloudformation:props": {
                                "assumeRolePolicyDocument": {
                                  "Statement": [
                                    {
                                      "Action": "sts:AssumeRole",
                                      "Effect": "Allow",
                                      "Principal": {
                                        "Service": "cloudformation.amazonaws.com"
                                      }
                                    }
                                  ],
                                  "Version": "2012-10-17"
                                }
                              }
                            }
                          },
                          "DefaultPolicy": {
                            "id": "DefaultPolicy",
                            "path": "Pattern3DemoStack/Pipeline/DeployProdEnv/ProdEnv_CFN_Deploy/Role/DefaultPolicy",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "Pattern3DemoStack/Pipeline/DeployProdEnv/ProdEnv_CFN_Deploy/Role/DefaultPolicy/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                                  "aws:cdk:cloudformation:props": {
                                    "policyDocument": {
                                      "Statement": [
                                        {
                                          "Action": [
                                            "s3:GetObject*",
                                            "s3:GetBucket*",
                                            "s3:List*"
                                          ],
                                          "Effect": "Allow",
                                          "Resource": [
                                            {
                                              "Fn::GetAtt": [
                                                "PipelineArtifactsBucket22248F97",
                                                "Arn"
                                              ]
                                            },
                                            {
                                              "Fn::Join": [
                                                "",
                                                [
                                                  {
                                                    "Fn::GetAtt": [
                                                      "PipelineArtifactsBucket22248F97",
                                                      "Arn"
                                                    ]
                                                  },
                                                  "/*"
                                                ]
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "Action": [
                                            "kms:Decrypt",
                                            "kms:DescribeKey"
                                          ],
                                          "Effect": "Allow",
                                          "Resource": {
                                            "Fn::GetAtt": [
                                              "PipelineArtifactsBucketEncryptionKey01D58D69",
                                              "Arn"
                                            ]
                                          }
                                        },
                                        {
                                          "Action": "*",
                                          "Effect": "Allow",
                                          "Resource": "*"
                                        }
                                      ],
                                      "Version": "2012-10-17"
                                    },
                                    "policyName": "PipelineDeployProdEnvProdEnvCFNDeployRoleDefaultPolicy0DBC6D27",
                                    "roles": [
                                      {
                                        "Ref": "PipelineDeployProdEnvProdEnvCFNDeployRole4385DDBA"
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "Pattern3DemoStack/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "Pattern3DemoStack/CDKMetadata/Default"
              },
              "Condition": {
                "id": "Condition",
                "path": "Pattern3DemoStack/CDKMetadata/Condition"
              }
            }
          }
        }
      }
    }
  }
}