{
  "Resources": {
    "MyPattern3TestBucketD4BB7E88": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "aws:kms"
              }
            }
          ]
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true
        },
        "Tags": [
          {
            "Key": "myDefaultTag",
            "Value": "hooray-for-tagging"
          }
        ],
        "VersioningConfiguration": {
          "Status": "Enabled"
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "Pattern3TestEnvStack/MyPattern3TestBucket/Resource"
      }
    },
    "MyPattern3TestVpc53A79AB6": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Pattern3TestEnvStack/MyPattern3TestVpc"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Pattern3TestEnvStack/MyPattern3TestVpc/Resource"
      }
    },
    "MyPattern3TestVpcPublicSubnet1Subnet8AE22394": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.0.0/18",
        "VpcId": {
          "Ref": "MyPattern3TestVpc53A79AB6"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "Pattern3TestEnvStack/MyPattern3TestVpc/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Pattern3TestEnvStack/MyPattern3TestVpc/PublicSubnet1/Subnet"
      }
    },
    "MyPattern3TestVpcPublicSubnet1RouteTableCD5DE7C6": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "MyPattern3TestVpc53A79AB6"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Pattern3TestEnvStack/MyPattern3TestVpc/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Pattern3TestEnvStack/MyPattern3TestVpc/PublicSubnet1/RouteTable"
      }
    },
    "MyPattern3TestVpcPublicSubnet1RouteTableAssociation9BC84E4C": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "MyPattern3TestVpcPublicSubnet1RouteTableCD5DE7C6"
        },
        "SubnetId": {
          "Ref": "MyPattern3TestVpcPublicSubnet1Subnet8AE22394"
        }
      },
      "Metadata": {
        "aws:cdk:path": "Pattern3TestEnvStack/MyPattern3TestVpc/PublicSubnet1/RouteTableAssociation"
      }
    },
    "MyPattern3TestVpcPublicSubnet1DefaultRouteFA74EDD3": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "MyPattern3TestVpcPublicSubnet1RouteTableCD5DE7C6"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "MyPattern3TestVpcIGW684294EF"
        }
      },
      "DependsOn": [
        "MyPattern3TestVpcVPCGW0570641F"
      ],
      "Metadata": {
        "aws:cdk:path": "Pattern3TestEnvStack/MyPattern3TestVpc/PublicSubnet1/DefaultRoute"
      }
    },
    "MyPattern3TestVpcPublicSubnet1EIPFFA51000": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Pattern3TestEnvStack/MyPattern3TestVpc/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Pattern3TestEnvStack/MyPattern3TestVpc/PublicSubnet1/EIP"
      }
    },
    "MyPattern3TestVpcPublicSubnet1NATGateway3DFA6A68": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "MyPattern3TestVpcPublicSubnet1EIPFFA51000",
            "AllocationId"
          ]
        },
        "SubnetId": {
          "Ref": "MyPattern3TestVpcPublicSubnet1Subnet8AE22394"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Pattern3TestEnvStack/MyPattern3TestVpc/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Pattern3TestEnvStack/MyPattern3TestVpc/PublicSubnet1/NATGateway"
      }
    },
    "MyPattern3TestVpcPublicSubnet2Subnet2D8F22B8": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.64.0/18",
        "VpcId": {
          "Ref": "MyPattern3TestVpc53A79AB6"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "Pattern3TestEnvStack/MyPattern3TestVpc/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Pattern3TestEnvStack/MyPattern3TestVpc/PublicSubnet2/Subnet"
      }
    },
    "MyPattern3TestVpcPublicSubnet2RouteTable9E227A29": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "MyPattern3TestVpc53A79AB6"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Pattern3TestEnvStack/MyPattern3TestVpc/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Pattern3TestEnvStack/MyPattern3TestVpc/PublicSubnet2/RouteTable"
      }
    },
    "MyPattern3TestVpcPublicSubnet2RouteTableAssociationA3C53F3F": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "MyPattern3TestVpcPublicSubnet2RouteTable9E227A29"
        },
        "SubnetId": {
          "Ref": "MyPattern3TestVpcPublicSubnet2Subnet2D8F22B8"
        }
      },
      "Metadata": {
        "aws:cdk:path": "Pattern3TestEnvStack/MyPattern3TestVpc/PublicSubnet2/RouteTableAssociation"
      }
    },
    "MyPattern3TestVpcPublicSubnet2DefaultRoute45BC9ABD": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "MyPattern3TestVpcPublicSubnet2RouteTable9E227A29"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "MyPattern3TestVpcIGW684294EF"
        }
      },
      "DependsOn": [
        "MyPattern3TestVpcVPCGW0570641F"
      ],
      "Metadata": {
        "aws:cdk:path": "Pattern3TestEnvStack/MyPattern3TestVpc/PublicSubnet2/DefaultRoute"
      }
    },
    "MyPattern3TestVpcPublicSubnet2EIPF0B81A2D": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Pattern3TestEnvStack/MyPattern3TestVpc/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Pattern3TestEnvStack/MyPattern3TestVpc/PublicSubnet2/EIP"
      }
    },
    "MyPattern3TestVpcPublicSubnet2NATGateway7E31EB12": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "MyPattern3TestVpcPublicSubnet2EIPF0B81A2D",
            "AllocationId"
          ]
        },
        "SubnetId": {
          "Ref": "MyPattern3TestVpcPublicSubnet2Subnet2D8F22B8"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Pattern3TestEnvStack/MyPattern3TestVpc/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Pattern3TestEnvStack/MyPattern3TestVpc/PublicSubnet2/NATGateway"
      }
    },
    "MyPattern3TestVpcPrivateSubnet1Subnet4897946C": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.128.0/18",
        "VpcId": {
          "Ref": "MyPattern3TestVpc53A79AB6"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "Pattern3TestEnvStack/MyPattern3TestVpc/PrivateSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Pattern3TestEnvStack/MyPattern3TestVpc/PrivateSubnet1/Subnet"
      }
    },
    "MyPattern3TestVpcPrivateSubnet1RouteTable677F325A": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "MyPattern3TestVpc53A79AB6"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Pattern3TestEnvStack/MyPattern3TestVpc/PrivateSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Pattern3TestEnvStack/MyPattern3TestVpc/PrivateSubnet1/RouteTable"
      }
    },
    "MyPattern3TestVpcPrivateSubnet1RouteTableAssociation8E45F936": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "MyPattern3TestVpcPrivateSubnet1RouteTable677F325A"
        },
        "SubnetId": {
          "Ref": "MyPattern3TestVpcPrivateSubnet1Subnet4897946C"
        }
      },
      "Metadata": {
        "aws:cdk:path": "Pattern3TestEnvStack/MyPattern3TestVpc/PrivateSubnet1/RouteTableAssociation"
      }
    },
    "MyPattern3TestVpcPrivateSubnet1DefaultRouteDDFFA3D5": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "MyPattern3TestVpcPrivateSubnet1RouteTable677F325A"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "MyPattern3TestVpcPublicSubnet1NATGateway3DFA6A68"
        }
      },
      "Metadata": {
        "aws:cdk:path": "Pattern3TestEnvStack/MyPattern3TestVpc/PrivateSubnet1/DefaultRoute"
      }
    },
    "MyPattern3TestVpcPrivateSubnet2Subnet04DE2344": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.192.0/18",
        "VpcId": {
          "Ref": "MyPattern3TestVpc53A79AB6"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "Pattern3TestEnvStack/MyPattern3TestVpc/PrivateSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Pattern3TestEnvStack/MyPattern3TestVpc/PrivateSubnet2/Subnet"
      }
    },
    "MyPattern3TestVpcPrivateSubnet2RouteTable3ADD50A8": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "MyPattern3TestVpc53A79AB6"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Pattern3TestEnvStack/MyPattern3TestVpc/PrivateSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Pattern3TestEnvStack/MyPattern3TestVpc/PrivateSubnet2/RouteTable"
      }
    },
    "MyPattern3TestVpcPrivateSubnet2RouteTableAssociation4DAD83F6": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "MyPattern3TestVpcPrivateSubnet2RouteTable3ADD50A8"
        },
        "SubnetId": {
          "Ref": "MyPattern3TestVpcPrivateSubnet2Subnet04DE2344"
        }
      },
      "Metadata": {
        "aws:cdk:path": "Pattern3TestEnvStack/MyPattern3TestVpc/PrivateSubnet2/RouteTableAssociation"
      }
    },
    "MyPattern3TestVpcPrivateSubnet2DefaultRoute5FB42E95": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "MyPattern3TestVpcPrivateSubnet2RouteTable3ADD50A8"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "MyPattern3TestVpcPublicSubnet2NATGateway7E31EB12"
        }
      },
      "Metadata": {
        "aws:cdk:path": "Pattern3TestEnvStack/MyPattern3TestVpc/PrivateSubnet2/DefaultRoute"
      }
    },
    "MyPattern3TestVpcIGW684294EF": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Pattern3TestEnvStack/MyPattern3TestVpc"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Pattern3TestEnvStack/MyPattern3TestVpc/IGW"
      }
    },
    "MyPattern3TestVpcVPCGW0570641F": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "MyPattern3TestVpc53A79AB6"
        },
        "InternetGatewayId": {
          "Ref": "MyPattern3TestVpcIGW684294EF"
        }
      },
      "Metadata": {
        "aws:cdk:path": "Pattern3TestEnvStack/MyPattern3TestVpc/VPCGW"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Modules": "aws-cdk=1.124.0,@aws-cdk/assets=1.67.0,@aws-cdk/aws-applicationautoscaling=1.67.0,@aws-cdk/aws-autoscaling=1.67.0,@aws-cdk/aws-autoscaling-common=1.67.0,@aws-cdk/aws-autoscaling-hooktargets=1.67.0,@aws-cdk/aws-cloudformation=1.67.0,@aws-cdk/aws-cloudwatch=1.67.0,@aws-cdk/aws-codebuild=1.67.0,@aws-cdk/aws-codecommit=1.67.0,@aws-cdk/aws-codeguruprofiler=1.67.0,@aws-cdk/aws-codepipeline=1.67.0,@aws-cdk/aws-codepipeline-actions=1.67.0,@aws-cdk/aws-ec2=1.67.0,@aws-cdk/aws-ecr=1.67.0,@aws-cdk/aws-ecr-assets=1.67.0,@aws-cdk/aws-ecs=1.67.0,@aws-cdk/aws-elasticloadbalancingv2=1.67.0,@aws-cdk/aws-events=1.67.0,@aws-cdk/aws-events-targets=1.67.0,@aws-cdk/aws-iam=1.67.0,@aws-cdk/aws-kms=1.67.0,@aws-cdk/aws-lambda=1.67.0,@aws-cdk/aws-logs=1.67.0,@aws-cdk/aws-s3=1.67.0,@aws-cdk/aws-s3-assets=1.67.0,@aws-cdk/aws-servicediscovery=1.67.0,@aws-cdk/aws-sns=1.67.0,@aws-cdk/aws-sns-subscriptions=1.67.0,@aws-cdk/aws-sqs=1.67.0,@aws-cdk/aws-ssm=1.67.0,@aws-cdk/aws-stepfunctions=1.67.0,@aws-cdk/aws-stepfunctions-tasks=1.67.0,@aws-cdk/cloud-assembly-schema=1.67.0,@aws-cdk/core=1.67.0,@aws-cdk/custom-resources=1.67.0,@aws-cdk/cx-api=1.67.0,@aws-cdk/region-info=1.67.0,jsii-runtime=node.js/v14.18.3"
      },
      "Metadata": {
        "aws:cdk:path": "Pattern3TestEnvStack/CDKMetadata/Default"
      },
      "Condition": "CDKMetadataAvailable"
    }
  },
  "Conditions": {
    "CDKMetadataAvailable": {
      "Fn::Or": [
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ca-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-northwest-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-central-1"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-3"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "me-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "sa-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-2"
              ]
            }
          ]
        }
      ]
    }
  }
}